{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "something": {
      "type": "string",
      "defaultValue": "value"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "baseUrl": {
      "type": "string",
      "defaultValue": "https://my.base/url",
      "metadata": {
        "description": "Base URL for the reference templates and scripts"
      }
    },
    "NetworkWatcherName": {
      "type": "string",
      "defaultValue": "[concat('NetworkWatcher_', parameters('location'))]",
      "metadata": {
        "description": "Name of the Network Watcher attached to your subscription. Format: NetworkWatcher_<region_name>"
      }
    },
    "FlowLogName": {
      "type": "string",
      "defaultValue": "FlowLog1",
      "metadata": {
        "description": "Chosen name of your Flow log resource"
      }
    },
    "existingNSG": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the target NSG"
      }
    },
    "RetentionDays": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Retention period in days. Default is zero which stands for permanent retention. Can be any Integer from 0 to 365"
      }
    },
    "FlowLogsversion": {
      "type": "string",
      "defaultValue": "2",
      "allowedValues": [
        "1",
        "2"
      ],
      "metadata": {
        "description": "FlowLogs Version. Correct values are 1 or 2 (default)"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    }
  },
  "variables": {
    "foo": "foo",
    "armBaseUrl": "[parameters('baseUrl')]",
    "module1Url": "[concat(variables('armBaseUrl'),'/nested/module1.json')]",
    "module2Url": "[concat(variables('armBaseUrl'),'/nested/module2.json')]",
    "objectVar": {
      "val1": "[concat('a', parameters('location'), 'b')]"
    },
    "arrayVar": [
      "abc",
      "[parameters('location')]"
    ],
    "storageAccountName": "[concat('flowlogs', uniquestring(resourceGroup().id))]"
  },
  "resources": [
    {
      "condition": false,
      "type": "Foo.Rp/bar",
      "name": "[concat(variables('foo'), 'bar')]",
      "apiVersion": "2019-06-01",
      "location": "westus",
      "properties": {
        "foo": "bar"
      }
    },
    {
      "condition": "[equals(parameters('something'), variables('foo'))]",
      "type": "Foo.Rp/bar",
      "name": "baz",
      "apiVersion": "2019-06-01",
      "location": "westus",
      "dependsOn": [
        "[concat(variables('foo'), 'bar')]"
      ]
    },
    {
      "condition": "[equals(add(1, 2), 3)]",
      "name": "module1Deploy",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('module1Url')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "objectParam": {
            "value": "[variables('objectVar')]"
          },
          "arrayParam": {
            "value": "[variables('arrayVar')]"
          }
        }
      }
    },
    {
      "condition": "[equals(add(1, 2), 3)]",
      "name": "module2Deploy",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('module2Url')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "objectParam": {
            "value": "[variables('objectVar')]"
          },
          "arrayParam": {
            "value": "[variables('arrayVar')]"
          }
        }
      }
    },
    {
      "type": "microsoft.storage/storageaccounts",
      "apiversion": "2019-06-01",
      "name": "[variables('storageaccountname')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageaccounttype')]"
      },
      "kind": "storagev2",
      "properties": {
      }
    },
    {
      "condition":  true,
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "deployFlowLogs",
      "resourceGroup": "NetworkWatcherRG",
      "dependsOn": [
        "[variables('storageAccountName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string"
            },
            "NetworkWatcherName": {
              "type": "string"
            },
            "FlowLogName": {
              "type": "string"
            },
            "existingNSG": {
              "type": "string"
            },
            "RetentionDays": {
              "type": "int"
            },
            "FlowLogsversion": {
              "type": "string"
            },
            "storageAccountResourceId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "condition":  "[equals(add(1, 2), 3)]",
              "type": "Microsoft.Network/networkWatchers/flowLogs",
              "apiVersion": "2020-06-01",
              "name": "[concat(parameters('NetworkWatcherName'), '/', parameters('FlowLogName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "targetResourceId": "[parameters('existingNSG')]",
                "storageId": "[parameters('storageAccountResourceId')]",
                "enabled": true,
                "retentionPolicy": {
                  "days": "[parameters('RetentionDays')]",
                  "enabled": true
                },
                "format": {
                  "type": "JSON",
                  "version": "[parameters('FlowLogsversion')]"
                }
              }
            }
          ]
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "NetworkWatcherName": {
            "value": "[parameters('NetworkWatcherName')]"
          },
          "FlowLogName": {
            "value": "[parameters('FlowLogName')]"
          },
          "existingNSG": {
            "value": "[parameters('existingNSG')]"
          },
          "RetentionDays": {
            "value": "[parameters('RetentionDays')]"
          },
          "FlowLogsversion": {
            "value": "[parameters('FlowLogsversion')]"
          },
          "storageAccountResourceId": {
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
