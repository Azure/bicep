[
  {
    "label": "'two'",
    "kind": "property",
    "detail": "two",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `44`  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "1_'two'",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "'two'"
    }
  },
  {
    "label": "a",
    "kind": "variable",
    "detail": "a",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_a",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "a"
    }
  },
  {
    "label": "anotherThing",
    "kind": "variable",
    "detail": "anotherThing",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_anotherThing",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "anotherThing"
    }
  },
  {
    "label": "any",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nany(value: any): any\n\n```\nConverts the specified value to the `any` type.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_any",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "any($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "array",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\narray(valueToConvert: any): array\n\n```\nConverts the value to an array.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_array",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "array($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "az",
    "kind": "folder",
    "detail": "az",
    "deprecated": false,
    "preselect": false,
    "sortText": "3_az",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "az."
    },
    "command": {
      "title": "symbol completion",
      "command": "editor.action.triggerSuggest"
    }
  },
  {
    "label": "az.resourceGroup",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nresourceGroup(): resourceGroup\nresourceGroup(resourceGroupName: string): resourceGroup\nresourceGroup(subscriptionId: string, resourceGroupName: string): resourceGroup\n\n```\nReturns a resource group scope.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_az.resourceGroup",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "az.resourceGroup($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "az.subscription",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nsubscription(): subscription\nsubscription(subscriptionId: string): subscription\n\n```\nReturns a subscription scope.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_az.subscription",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "az.subscription($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "badEquals",
    "kind": "variable",
    "detail": "badEquals",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_badEquals",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "badEquals"
    }
  },
  {
    "label": "badEquals2",
    "kind": "variable",
    "detail": "badEquals2",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_badEquals2",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "badEquals2"
    }
  },
  {
    "label": "bar",
    "kind": "variable",
    "detail": "bar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_bar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "bar"
    }
  },
  {
    "label": "base64",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nbase64(inputString: string): string\n\n```\nReturns the base64 representation of the input string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_base64",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "base64($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "base64ToJson",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nbase64ToJson(base64Value: string): any\n\n```\nConverts a base64 representation to a JSON object.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_base64ToJson",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "base64ToJson($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "base64ToString",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nbase64ToString(base64Value: string): string\n\n```\nConverts a base64 representation to a string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_base64ToString",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "base64ToString($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "batchSizeMakesNoSenseHere",
    "kind": "variable",
    "detail": "batchSizeMakesNoSenseHere",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_batchSizeMakesNoSenseHere",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "batchSizeMakesNoSenseHere"
    }
  },
  {
    "label": "bool",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nbool(value: any): bool\n\n```\nConverts the parameter to a boolean.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_bool",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "bool($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "coalesce",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ncoalesce(... : any): any\n\n```\nReturns first non-null value from the parameters. Empty strings, empty arrays, and empty objects are not null.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_coalesce",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "coalesce($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "concat",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nconcat(... : array): array\nconcat(... : bool | int | string): string\n\n```\nCombines multiple arrays and returns the concatenated array, or combines multiple string values and returns the concatenated string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_concat",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "concat($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "contains",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ncontains(object: object, propertyName: string): bool\ncontains(array: array, itemToFind: any): bool\ncontains(string: string, itemToFind: string): bool\n\n```\nChecks whether an array contains a value, an object contains a key, or a string contains a substring. The string comparison is case-sensitive. However, when testing if an object contains a key, the comparison is case-insensitive.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_contains",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "contains($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "copy",
    "kind": "variable",
    "detail": "copy",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_copy",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "copy"
    }
  },
  {
    "label": "dataUri",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ndataUri(valueToConvert: any): string\n\n```\nConverts a value to a data URI.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_dataUri",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "dataUri($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "dataUriToString",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ndataUriToString(dataUriToConvert: string): string\n\n```\nConverts a data URI formatted value to a string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_dataUriToString",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "dataUriToString($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "dateTimeAdd",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ndateTimeAdd(base: string, duration: string, [format: string]): string\n\n```\nAdds a time duration to a base value. ISO 8601 format is expected.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_dateTimeAdd",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "dateTimeAdd($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "dateTimeFromEpoch",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ndateTimeFromEpoch([epochTime: int]): string\n\n```\nConverts an epoch time integer value to an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) dateTime string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_dateTimeFromEpoch",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "dateTimeFromEpoch($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "dateTimeToEpoch",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ndateTimeToEpoch([dateTime: string]): int\n\n```\nConverts an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) dateTime string to an epoch time integer value.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_dateTimeToEpoch",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "dateTimeToEpoch($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "deployment",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ndeployment(): deployment\n\n```\nReturns information about the current deployment operation.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_deployment",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "deployment()$0"
    }
  },
  {
    "label": "doubleString",
    "kind": "variable",
    "detail": "doubleString",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_doubleString",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "doubleString"
    }
  },
  {
    "label": "empty",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nempty(itemToTest: array | null | object | string): bool\n\n```\nDetermines if an array, object, or string is empty.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_empty",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "empty($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "endsWith",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nendsWith(stringToSearch: string, stringToFind: string): bool\n\n```\nDetermines whether a string ends with a value. The comparison is case-insensitive.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_endsWith",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "endsWith($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "environment",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nenvironment(): environment\n\n```\nReturns information about the Azure environment used for deployment.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_environment",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "environment()$0"
    }
  },
  {
    "label": "evenMoreIndirection",
    "kind": "variable",
    "detail": "evenMoreIndirection",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_evenMoreIndirection",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "evenMoreIndirection"
    }
  },
  {
    "label": "extensionResourceId",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nextensionResourceId(resourceId: string, resourceType: string, ... : string): string\n\n```\nReturns the resource ID for an [extension](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/extension-resource-types) resource, which is a resource type that is applied to another resource to add to its capabilities.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_extensionResourceId",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "extensionResourceId($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "filter",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nfilter(array: array, predicate: any => bool): array\n\n```\nFilters an array with a custom filtering function.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_filter",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "filter($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "first",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nfirst(array: array): any\nfirst(string: string): string\n\n```\nReturns the first element of the array, or first character of the string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_first",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "first($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "flatten",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nflatten(... : array[]): array\n\n```\nTakes an array of arrays, and returns an array of sub-array elements, in the original order. Sub-arrays are only flattened once, not recursively.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_flatten",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "flatten()$0"
    }
  },
  {
    "label": "foo",
    "kind": "variable",
    "detail": "foo",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_foo",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "foo"
    }
  },
  {
    "label": "format",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nformat(formatString: string, ... : any): string\n\n```\nCreates a formatted string from input values.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_format",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "format($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "guid",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nguid(... : string): string\n\n```\nCreates a value in the format of a globally unique identifier based on the values provided as parameters.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_guid",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "guid($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "if-else",
    "kind": "snippet",
    "detail": "if-else",
    "deprecated": false,
    "preselect": false,
    "sortText": "1_if-else",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "${1:condition} ? ${2:TrueValue} : ${3:FalseValue}"
    }
  },
  {
    "label": "indexOf",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nindexOf(stringToSearch: string, stringToFind: string): int\nindexOf(array: array, itemToFind: any): int\n\n```\nReturns the first position of a value within a string. The comparison is case-insensitive.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_indexOf",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "indexOf($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "indirection",
    "kind": "variable",
    "detail": "indirection",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_indirection",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "indirection"
    }
  },
  {
    "label": "inlinedVariable",
    "kind": "variable",
    "detail": "inlinedVariable",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_inlinedVariable",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "inlinedVariable"
    }
  },
  {
    "label": "innerPropertyLoop",
    "kind": "variable",
    "detail": "innerPropertyLoop",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_innerPropertyLoop",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "innerPropertyLoop"
    }
  },
  {
    "label": "innerPropertyLoop2",
    "kind": "variable",
    "detail": "innerPropertyLoop2",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_innerPropertyLoop2",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "innerPropertyLoop2"
    }
  },
  {
    "label": "int",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nint(valueToConvert: int | string): int\n\n```\nConverts the specified value to an integer.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_int",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "int($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "intersection",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nintersection(... : object): object\nintersection(... : array): array\n\n```\nReturns a single array or object with the common elements from the parameters.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_intersection",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "intersection($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "invalidEnvAuthVar",
    "kind": "variable",
    "detail": "invalidEnvAuthVar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_invalidEnvAuthVar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "invalidEnvAuthVar"
    }
  },
  {
    "label": "invalidEnvironmentVar",
    "kind": "variable",
    "detail": "invalidEnvironmentVar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_invalidEnvironmentVar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "invalidEnvironmentVar"
    }
  },
  {
    "label": "invalidLocationVar",
    "kind": "variable",
    "detail": "invalidLocationVar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_invalidLocationVar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "invalidLocationVar"
    }
  },
  {
    "label": "invalidNamespaceAssignment",
    "kind": "variable",
    "detail": "invalidNamespaceAssignment",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_invalidNamespaceAssignment",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "invalidNamespaceAssignment"
    }
  },
  {
    "label": "items",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nitems(object: object): object[]\n\n```\nReturns an array of keys and values for an object. Elements are consistently ordered alphabetically by key.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_items",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "items($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "join",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\njoin(inputArray: string[], delimiter: string): string\n\n```\nJoins multiple strings into a single string, separated using a delimiter.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_join",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "join($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "json",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\njson(json: string): any\n\n```\nConverts a valid JSON string into a JSON data type.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_json",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "json($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "keyVaultSecretArrayInterpolatedVar",
    "kind": "variable",
    "detail": "keyVaultSecretArrayInterpolatedVar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_keyVaultSecretArrayInterpolatedVar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "keyVaultSecretArrayInterpolatedVar"
    }
  },
  {
    "label": "keyVaultSecretArrayVar",
    "kind": "variable",
    "detail": "keyVaultSecretArrayVar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_keyVaultSecretArrayVar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "keyVaultSecretArrayVar"
    }
  },
  {
    "label": "keyVaultSecretInterpolatedVar",
    "kind": "variable",
    "detail": "keyVaultSecretInterpolatedVar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_keyVaultSecretInterpolatedVar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "keyVaultSecretInterpolatedVar"
    }
  },
  {
    "label": "keyVaultSecretObjectVar",
    "kind": "variable",
    "detail": "keyVaultSecretObjectVar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_keyVaultSecretObjectVar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "keyVaultSecretObjectVar"
    }
  },
  {
    "label": "keyVaultSecretVar",
    "kind": "variable",
    "detail": "keyVaultSecretVar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_keyVaultSecretVar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "keyVaultSecretVar"
    }
  },
  {
    "label": "keys",
    "kind": "variable",
    "detail": "keys",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_keys",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "keys"
    }
  },
  {
    "label": "kv",
    "kind": "interface",
    "detail": "kv",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_kv",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "kv"
    },
    "commitCharacters": [
      ":"
    ]
  },
  {
    "label": "last",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nlast(array: array): any\nlast(string: string): string\n\n```\nReturns the last element of the array, or last character of the string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_last",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "last($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "lastIndexOf",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nlastIndexOf(stringToSearch: string, stringToFind: string): int\nlastIndexOf(array: array, itemToFind: any): int\n\n```\nReturns the last position of a value within a string. The comparison is case-insensitive.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_lastIndexOf",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "lastIndexOf($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "length",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nlength(arg: array | object | string): int\n\n```\nReturns the number of characters in a string, elements in an array, or root-level properties in an object.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_length",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "length($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "listSecrets",
    "kind": "variable",
    "detail": "listSecrets",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_listSecrets",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "listSecrets"
    }
  },
  {
    "label": "listSecretsVar",
    "kind": "variable",
    "detail": "listSecretsVar",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_listSecretsVar",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "listSecretsVar"
    }
  },
  {
    "label": "loadFileAsBase64",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nloadFileAsBase64(filePath: string): string\n\n```\nLoads the specified file as base64 string. File loading occurs during compilation, not at runtime. The maximum allowed size is 96 Kb.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_loadFileAsBase64",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "loadFileAsBase64($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "loadJsonContent",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nloadJsonContent(filePath: string, [jsonPath: string], [encoding: 'iso-8859-1' | 'us-ascii' | 'utf-16' | 'utf-16BE' | 'utf-8']): any\n\n```\nLoads the specified JSON file as bicep object. File loading occurs during compilation, not at runtime.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_loadJsonContent",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "loadJsonContent($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "loadTextContent",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nloadTextContent(filePath: string, [encoding: 'iso-8859-1' | 'us-ascii' | 'utf-16' | 'utf-16BE' | 'utf-8']): string\n\n```\nLoads the content of the specified file into a string. Content loading occurs during compilation, not at runtime. The maximum allowed content size is 131072 characters (including line endings).\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_loadTextContent",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "loadTextContent($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "loopExpression",
    "kind": "variable",
    "detail": "loopExpression",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_loopExpression",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "loopExpression"
    }
  },
  {
    "label": "managementGroup",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nmanagementGroup(name: string): managementGroup\n\n```\nReturns a management group scope.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_managementGroup",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "managementGroup($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "managementGroupResourceId",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nmanagementGroupResourceId(resourceType: string, ... : string): string\nmanagementGroupResourceId(managementGroupId: string, resourceType: string, ... : string): string\n\n```\nReturns the unique identifier for a resource deployed at the management group level.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_managementGroupResourceId",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "managementGroupResourceId($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "map",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nmap(array: array, predicate: any => any): array\n\n```\nApplies a custom mapping function to each element of an array and returns the result array.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_map",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "map($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "max",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nmax(... : int): int\nmax(intArray: array): int\n\n```\nReturns the maximum value from an array of integers or a comma-separated list of integers.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_max",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "max($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "min",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nmin(... : int): int\nmin(intArray: array): int\n\n```\nReturns the minimum value from an array of integers or a comma-separated list of integers.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_min",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "min($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "missingArrayVariable",
    "kind": "variable",
    "detail": "missingArrayVariable",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_missingArrayVariable",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "missingArrayVariable"
    }
  },
  {
    "label": "missingValue",
    "kind": "variable",
    "detail": "missingValue",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_missingValue",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "missingValue"
    }
  },
  {
    "label": "mixedArrayTypeCompletions",
    "kind": "variable",
    "detail": "mixedArrayTypeCompletions",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_mixedArrayTypeCompletions",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "mixedArrayTypeCompletions"
    }
  },
  {
    "label": "mixedArrayTypeCompletions2",
    "kind": "variable",
    "detail": "mixedArrayTypeCompletions2",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_mixedArrayTypeCompletions2",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "mixedArrayTypeCompletions2"
    }
  },
  {
    "label": "moreIndirection",
    "kind": "variable",
    "detail": "moreIndirection",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_moreIndirection",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "moreIndirection"
    }
  },
  {
    "label": "myConcat",
    "kind": "variable",
    "detail": "myConcat",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_myConcat",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "myConcat"
    }
  },
  {
    "label": "myFloat",
    "kind": "variable",
    "detail": "myFloat",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_myFloat",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "myFloat"
    }
  },
  {
    "label": "myRef",
    "kind": "variable",
    "detail": "myRef",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_myRef",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "myRef"
    }
  },
  {
    "label": "mySum",
    "kind": "variable",
    "detail": "mySum",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_mySum",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "mySum"
    }
  },
  {
    "label": "noFilteredLoopsInVariables",
    "kind": "variable",
    "detail": "noFilteredLoopsInVariables",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_noFilteredLoopsInVariables",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "noFilteredLoopsInVariables"
    }
  },
  {
    "label": "noNestedVariableLoopsEither",
    "kind": "variable",
    "detail": "noNestedVariableLoopsEither",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_noNestedVariableLoopsEither",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "noNestedVariableLoopsEither"
    }
  },
  {
    "label": "nonTopLevelLoop",
    "kind": "variable",
    "detail": "nonTopLevelLoop",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_nonTopLevelLoop",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "nonTopLevelLoop"
    }
  },
  {
    "label": "notRuntime",
    "kind": "variable",
    "detail": "notRuntime",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_notRuntime",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "notRuntime"
    }
  },
  {
    "label": "objWithInterp",
    "kind": "variable",
    "detail": "objWithInterp",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_objWithInterp",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "objWithInterp"
    }
  },
  {
    "label": "objectLiteralType",
    "kind": "variable",
    "detail": "objectLiteralType",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_objectLiteralType",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "objectLiteralType"
    }
  },
  {
    "label": "objectVarTopLevelArrayIndexCompletions",
    "kind": "variable",
    "detail": "objectVarTopLevelArrayIndexCompletions",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_objectVarTopLevelArrayIndexCompletions",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "objectVarTopLevelArrayIndexCompletions"
    }
  },
  {
    "label": "objectVarTopLevelCompletions",
    "kind": "variable",
    "detail": "objectVarTopLevelCompletions",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_objectVarTopLevelCompletions",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "objectVarTopLevelCompletions"
    }
  },
  {
    "label": "objectVarTopLevelCompletions2",
    "kind": "variable",
    "detail": "objectVarTopLevelCompletions2",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_objectVarTopLevelCompletions2",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "objectVarTopLevelCompletions2"
    }
  },
  {
    "label": "oneArrayItemCompletions",
    "kind": "variable",
    "detail": "oneArrayItemCompletions",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_oneArrayItemCompletions",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "oneArrayItemCompletions"
    }
  },
  {
    "label": "oneArrayItemCompletions2",
    "kind": "variable",
    "detail": "oneArrayItemCompletions2",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_oneArrayItemCompletions2",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "oneArrayItemCompletions2"
    }
  },
  {
    "label": "padLeft",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\npadLeft(valueToPad: int | string, totalLength: int, [paddingCharacter: string]): string\n\n```\nReturns a right-aligned string by adding characters to the left until reaching the total specified length.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_padLeft",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "padLeft($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "pickZones",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\npickZones(providerNamespace: string, resourceType: string, location: string, [numberOfZones: int], [offset: int]): array\n\n```\nDetermines whether a resource type supports zones for a region.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_pickZones",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "pickZones($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "providers",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nproviders(providerNamespace: string): Provider\nproviders(providerNamespace: string, resourceType: string): ProviderResource\n\n```\nReturns information about a resource provider and its supported resource types. If you don't provide a resource type, the function returns all the supported types for the resource provider.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_providers",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "providers($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "range",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nrange(startIndex: int, count: int): int[]\n\n```\nCreates an array of integers from a starting integer and containing a number of items.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_range",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "range($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "reduce",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nreduce(array: array, initialValue: any, predicate: (any, any) => any): array\n\n```\nReduces an array with a custom reduce function.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_reduce",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "reduce($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "reference",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nreference(resourceNameOrIdentifier: string, [apiVersion: string], [full: string]): object\n\n```\nReturns an object representing a resource's runtime state.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_reference",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "reference($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "replace",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nreplace(originalString: string, oldString: string, newString: string): string\n\n```\nReturns a new string with all instances of one string replaced by another string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_replace",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "replace($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "resourceGroup",
    "kind": "variable",
    "detail": "resourceGroup",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_resourceGroup",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "resourceGroup"
    }
  },
  {
    "label": "resourceId",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nresourceId(resourceType: string, ... : string): string\nresourceId(subscriptionId: string, resourceType: string, ... : string): string\nresourceId(resourceGroupName: string, resourceType: string, ... : string): string\nresourceId(subscriptionId: string, resourceGroupName: string, resourceType: string, ... : string): string\n\n```\nReturns the unique identifier of a resource. You use this function when the resource name is ambiguous or not provisioned within the same template. The format of the returned identifier varies based on whether the deployment happens at the scope of a resource group, subscription, management group, or tenant.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_resourceId",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "resourceId($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "rgName",
    "kind": "variable",
    "detail": "rgName",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_rgName",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "rgName"
    }
  },
  {
    "label": "runtimeLoop",
    "kind": "variable",
    "detail": "runtimeLoop",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_runtimeLoop",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "runtimeLoop"
    }
  },
  {
    "label": "runtimeLoop2",
    "kind": "variable",
    "detail": "runtimeLoop2",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_runtimeLoop2",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "runtimeLoop2"
    }
  },
  {
    "label": "runtimeLoop3",
    "kind": "variable",
    "detail": "runtimeLoop3",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_runtimeLoop3",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "runtimeLoop3"
    }
  },
  {
    "label": "runtimeLoop4",
    "kind": "variable",
    "detail": "runtimeLoop4",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_runtimeLoop4",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "runtimeLoop4"
    }
  },
  {
    "label": "runtimeLoop5",
    "kind": "variable",
    "detail": "runtimeLoop5",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_runtimeLoop5",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "runtimeLoop5"
    }
  },
  {
    "label": "skip",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nskip(originalValue: array, numberToSkip: int): array\nskip(originalValue: string, numberToSkip: int): string\n\n```\nReturns a string with all the characters after the specified number of characters, or an array with all the elements after the specified number of elements.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_skip",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "skip($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "something",
    "kind": "variable",
    "detail": "something",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_something",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "something"
    }
  },
  {
    "label": "sort",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nsort(array: array, predicate: (any, any) => bool): array\n\n```\nSorts an array with a custom sort function.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_sort",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "sort($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "split",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nsplit(inputString: string, delimiter: array | string): array\n\n```\nReturns an array of strings that contains the substrings of the input string that are delimited by the specified delimiters.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_split",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "split($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "startsWith",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nstartsWith(stringToSearch: string, stringToFind: string): bool\n\n```\nDetermines whether a string starts with a value. The comparison is case-insensitive.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_startsWith",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "startsWith($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "string",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nstring(valueToConvert: any): string\n\n```\nConverts the specified value to a string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_string",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "string($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "subName",
    "kind": "variable",
    "detail": "subName",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_subName",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "subName"
    }
  },
  {
    "label": "subscription",
    "kind": "variable",
    "detail": "subscription",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_subscription",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "subscription"
    }
  },
  {
    "label": "subscriptionResourceId",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nsubscriptionResourceId(resourceType: string, ... : string): string\nsubscriptionResourceId(subscriptionId: string, resourceType: string, ... : string): string\n\n```\nReturns the unique identifier for a resource deployed at the subscription level.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_subscriptionResourceId",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "subscriptionResourceId($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "substring",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nsubstring(stringToParse: string, startIndex: int, [length: int]): string\n\n```\nReturns a substring that starts at the specified character position and contains the specified number of characters.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_substring",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "substring($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "sys",
    "kind": "folder",
    "detail": "sys",
    "deprecated": false,
    "preselect": false,
    "sortText": "3_sys",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "sys."
    },
    "command": {
      "title": "symbol completion",
      "command": "editor.action.triggerSuggest"
    }
  },
  {
    "label": "take",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ntake(originalValue: array, numberToTake: int): array\ntake(originalValue: string, numberToTake: int): string\n\n```\nReturns an array or string. An array has the specified number of elements from the start of the array. A string has the specified number of characters from the start of the string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_take",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "take($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "tenant",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ntenant(): tenant\n\n```\nReturns the current tenant scope.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_tenant",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "tenant()$0"
    }
  },
  {
    "label": "tenantResourceId",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ntenantResourceId(resourceType: string, ... : string): string\n\n```\nReturns the unique identifier for a resource deployed at the tenant level.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_tenantResourceId",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "tenantResourceId($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "test",
    "kind": "variable",
    "detail": "test",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_test",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "test"
    }
  },
  {
    "label": "test2",
    "kind": "variable",
    "detail": "test2",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_test2",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "test2"
    }
  },
  {
    "label": "test3",
    "kind": "variable",
    "detail": "test3",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_test3",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "test3"
    }
  },
  {
    "label": "testDupe",
    "kind": "variable",
    "detail": "testDupe",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_testDupe",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "testDupe"
    }
  },
  {
    "label": "toLower",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ntoLower(stringToChange: string): string\n\n```\nConverts the specified string to lower case.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_toLower",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "toLower($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "toUpper",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ntoUpper(stringToChange: string): string\n\n```\nConverts the specified string to upper case.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_toUpper",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "toUpper($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "trim",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\ntrim(stringToTrim: string): string\n\n```\nRemoves all leading and trailing white-space characters from the specified string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_trim",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "trim($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "union",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nunion(... : object): object\nunion(... : array): array\n\n```\nReturns a single array or object with all elements from the parameters. Duplicate values or keys are only included once.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_union",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "union($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "uniqueString",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nuniqueString(... : string): string\n\n```\nCreates a deterministic hash string based on the values provided as parameters. The returned value is 13 characters long.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_uniqueString",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "uniqueString($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "uri",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nuri(baseUri: string, relativeUri: string): string\n\n```\nCreates an absolute URI by combining the baseUri and the relativeUri string.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_uri",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "uri($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "uriComponent",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nuriComponent(stringToEncode: string): string\n\n```\nEncodes a URI.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_uriComponent",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "uriComponent($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "uriComponentToString",
    "kind": "function",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nuriComponentToString(uriEncodedString: string): string\n\n```\nReturns a string of a URI encoded value.\n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "3_uriComponentToString",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "uriComponentToString($0)"
    },
    "command": {
      "title": "signature help",
      "command": "editor.action.triggerParameterHints"
    }
  },
  {
    "label": "x",
    "kind": "variable",
    "detail": "x",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_x",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "x"
    }
  },
  {
    "label": "y",
    "kind": "variable",
    "detail": "y",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_y",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "y"
    }
  },
  {
    "label": "zoneInput",
    "kind": "variable",
    "detail": "zoneInput",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_zoneInput",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "zoneInput"
    }
  },
  {
    "label": "zones",
    "kind": "interface",
    "detail": "zones",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_zones",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "zones"
    },
    "commitCharacters": [
      ":"
    ]
  }
]