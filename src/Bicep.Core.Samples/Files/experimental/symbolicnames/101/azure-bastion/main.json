{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "1.9-experimental",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
    "_generator": {
      "name": "bicep",
      "version": "dev",
      "templateHash": "8389530258169044388"
    }
  },
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet01",
      "metadata": {
        "description": "Name of new or existing vnet to which Azure Bastion should be deployed"
      }
    },
    "vnetIpPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "IP prefix for available addresses in vnet address space"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Specify whether to provision new vnet or deploy to existing vnet"
      }
    },
    "bastionSubnetIpPrefix": {
      "type": "string",
      "defaultValue": "10.1.1.0/27",
      "metadata": {
        "description": "Bastion subnet IP prefix MUST be within vnet IP prefix address space"
      }
    },
    "bastionHostName": {
      "type": "string",
      "metadata": {
        "description": "Name of Azure Bastion resource"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for Bastion and virtual network"
      }
    }
  },
  "variables": {
    "publicIpAddressName": "[format('{0}-pip', parameters('bastionHostName'))]",
    "bastionSubnetName": "AzureBastionSubnet"
  },
  "resources": {
    "publicIp": {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-05-01",
      "name": "[variables('publicIpAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    "newVirtualNetwork": {
      "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetIpPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('bastionSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('bastionSubnetIpPrefix')]"
            }
          }
        ]
      }
    },
    "existingVirtualNetwork": {
      "condition": "[equals(parameters('vnetNewOrExisting'), 'existing')]",
      "existing": true,
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "name": "[parameters('vnetName')]"
    },
    "subnet": {
      "condition": "[equals(parameters('vnetNewOrExisting'), 'existing')]",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/{1}', parameters('vnetName'), variables('bastionSubnetName'))]",
      "properties": {
        "addressPrefix": "[parameters('bastionSubnetIpPrefix')]"
      }
    },
    "bastionHost": {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2020-05-01",
      "name": "[parameters('bastionHostName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "subnet": {
                "id": "[resourceInfo('subnet').id]"
              },
              "publicIPAddress": {
                "id": "[resourceInfo('publicIp').id]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "newVirtualNetwork",
        "publicIp",
        "subnet"
      ]
    }
  }
}