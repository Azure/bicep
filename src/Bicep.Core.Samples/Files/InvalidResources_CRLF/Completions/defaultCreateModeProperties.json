[
  {
    "label": "apiProperties",
    "kind": "property",
    "detail": "apiProperties",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `ApiProperties`  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_apiProperties",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "apiProperties"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "backupPolicy",
    "kind": "property",
    "detail": "backupPolicy",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `BackupPolicy`  \nThe object representing the policy for taking backups on an account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_backupPolicy",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "backupPolicy"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "capabilities",
    "kind": "property",
    "detail": "capabilities",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `Capability[]`  \nList of Cosmos DB capabilities for the account  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_capabilities",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "capabilities"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "connectorOffer",
    "kind": "property",
    "detail": "connectorOffer",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `'Small'`  \nThe cassandra connector offer type for the Cosmos DB C* database account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_connectorOffer",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "connectorOffer"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "consistencyPolicy",
    "kind": "property",
    "detail": "consistencyPolicy",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `ConsistencyPolicy`  \nThe consistency policy for the Cosmos DB database account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_consistencyPolicy",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "consistencyPolicy"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "cors",
    "kind": "property",
    "detail": "cors",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `CorsPolicy[]`  \nThe CORS policy for the Cosmos DB database account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_cors",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "cors"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "createMode",
    "kind": "property",
    "detail": "createMode (Required)",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `'Default'`  \nEnum to indicate the mode of account creation.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_createMode",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "createMode"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "databaseAccountOfferType",
    "kind": "property",
    "detail": "databaseAccountOfferType (Required)",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `'Standard'`  \nThe offer type for the Cosmos DB database account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_databaseAccountOfferType",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "databaseAccountOfferType"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "disableKeyBasedMetadataWriteAccess",
    "kind": "property",
    "detail": "disableKeyBasedMetadataWriteAccess",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `bool`  \nDisable write operations on metadata resources (databases, containers, throughput) via account keys  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_disableKeyBasedMetadataWriteAccess",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "disableKeyBasedMetadataWriteAccess"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "documentEndpoint",
    "kind": "property",
    "detail": "documentEndpoint",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `string`  \nRead-only property  \nThe connection endpoint for the Cosmos DB database account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_documentEndpoint",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "documentEndpoint"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "enableAnalyticalStorage",
    "kind": "property",
    "detail": "enableAnalyticalStorage",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `bool`  \nFlag to indicate whether to enable storage analytics.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_enableAnalyticalStorage",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "enableAnalyticalStorage"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "enableAutomaticFailover",
    "kind": "property",
    "detail": "enableAutomaticFailover",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `bool`  \nEnables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_enableAutomaticFailover",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "enableAutomaticFailover"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "enableCassandraConnector",
    "kind": "property",
    "detail": "enableCassandraConnector",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `bool`  \nEnables the cassandra connector on the Cosmos DB C* account  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_enableCassandraConnector",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "enableCassandraConnector"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "enableFreeTier",
    "kind": "property",
    "detail": "enableFreeTier",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `bool`  \nFlag to indicate whether Free Tier is enabled.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_enableFreeTier",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "enableFreeTier"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "enableMultipleWriteLocations",
    "kind": "property",
    "detail": "enableMultipleWriteLocations",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `bool`  \nEnables the account to write in multiple locations  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_enableMultipleWriteLocations",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "enableMultipleWriteLocations"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "failoverPolicies",
    "kind": "property",
    "detail": "failoverPolicies",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `FailoverPolicy[]`  \nRead-only property  \nAn array that contains the regions ordered by their failover priorities.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_failoverPolicies",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "failoverPolicies"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "instanceId",
    "kind": "property",
    "detail": "instanceId",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `string`  \nRead-only property  \nA unique identifier assigned to the database account  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_instanceId",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "instanceId"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "ipRules",
    "kind": "property",
    "detail": "ipRules",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `IpAddressOrRange[]`  \nArray of IpAddressOrRange objects.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_ipRules",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "ipRules"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "isVirtualNetworkFilterEnabled",
    "kind": "property",
    "detail": "isVirtualNetworkFilterEnabled",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `bool`  \nFlag to indicate whether to enable/disable Virtual Network ACL rules.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_isVirtualNetworkFilterEnabled",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "isVirtualNetworkFilterEnabled"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "keyVaultKeyUri",
    "kind": "property",
    "detail": "keyVaultKeyUri",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `string`  \nThe URI of the key vault  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_keyVaultKeyUri",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "keyVaultKeyUri"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "locations",
    "kind": "property",
    "detail": "locations (Required)",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `Location[]`  \nAn array that contains the georeplication locations enabled for the Cosmos DB account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_locations",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "locations"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "privateEndpointConnections",
    "kind": "property",
    "detail": "privateEndpointConnections",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `PrivateEndpointConnection[]`  \nRead-only property  \nList of Private Endpoint Connections configured for the Cosmos DB account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_privateEndpointConnections",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "privateEndpointConnections"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "provisioningState",
    "kind": "property",
    "detail": "provisioningState",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `string`  \nRead-only property  \nThe status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_provisioningState",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "provisioningState"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "publicNetworkAccess",
    "kind": "property",
    "detail": "publicNetworkAccess",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `'Disabled' | 'Enabled'`  \nRead-only property  \nWhether requests from Public Network are allowed  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_publicNetworkAccess",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "publicNetworkAccess"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "readLocations",
    "kind": "property",
    "detail": "readLocations",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `Location[]`  \nRead-only property  \nAn array that contains of the read locations enabled for the Cosmos DB account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_readLocations",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "readLocations"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "restoreParameters",
    "kind": "property",
    "detail": "restoreParameters",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `RestoreParameters`  \nRead-only property  \nParameters to indicate the information about the restore.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_restoreParameters",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "restoreParameters"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "virtualNetworkRules",
    "kind": "property",
    "detail": "virtualNetworkRules",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `VirtualNetworkRule[]`  \nList of Virtual Network ACL rules configured for the Cosmos DB account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_virtualNetworkRules",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "virtualNetworkRules"
    },
    "commitCharacters": [
      "."
    ]
  },
  {
    "label": "writeLocations",
    "kind": "property",
    "detail": "writeLocations",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `Location[]`  \nRead-only property  \nAn array that contains the write location for the Cosmos DB account.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_writeLocations",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "writeLocations"
    },
    "commitCharacters": [
      "."
    ]
  }
]