[
  {
    "label": "dependsOn",
    "kind": "property",
    "detail": "dependsOn",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `(module[] | (resource | module) | resource[])[]`  \nWrite-only property  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_dependsOn",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "dependsOn:"
    }
  },
  {
    "label": "identity",
    "kind": "property",
    "detail": "identity",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `ManagedServiceIdentity`  \nManaged identity generic object.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_identity",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "identity:"
    }
  },
  {
    "label": "location",
    "kind": "property",
    "detail": "location (Required)",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `string`  \nThe location of the ACI and the storage account for the deployment script.  \n"
    },
    "deprecated": false,
    "preselect": true,
    "sortText": "1_location",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "location:"
    }
  },
  {
    "label": "name",
    "kind": "property",
    "detail": "name (Required)",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `string`  \nThe resource name  \n"
    },
    "deprecated": false,
    "preselect": true,
    "sortText": "1_name",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "name:"
    }
  },
  {
    "label": "resource",
    "kind": "keyword",
    "detail": "Resource keyword",
    "deprecated": false,
    "preselect": false,
    "sortText": "2_resource",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "resource"
    }
  },
  {
    "label": "resource-with-defaults",
    "kind": "snippet",
    "detail": "Nested resource with defaults",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nresource Identifier 'Type' = {\n  name: \n  properties: {\n    \n  }\n}\n```"
    },
    "deprecated": false,
    "preselect": true,
    "sortText": "2_resource-with-defaults",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "resource ${1:Identifier} '${2:Type}' = {\n  name: $3\n  properties: {\n    $0\n  }\n}"
    },
    "command": {
      "command": "bicep.Telemetry",
      "arguments": [
        {
          "EventName": "NestedResourceDeclarationSnippetInsertion",
          "Properties": {
            "name": "resource-with-defaults"
          }
        }
      ]
    }
  },
  {
    "label": "resource-without-defaults",
    "kind": "snippet",
    "detail": "Nested resource without defaults",
    "documentation": {
      "kind": "markdown",
      "value": "```bicep\nresource Identifier 'Type' = {\n  name: \n  \n}\n```"
    },
    "deprecated": false,
    "preselect": true,
    "sortText": "2_resource-without-defaults",
    "insertTextFormat": "snippet",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "resource ${1:Identifier} '${2:Type}' = {\n  name: $3\n  $0\n}"
    },
    "command": {
      "command": "bicep.Telemetry",
      "arguments": [
        {
          "EventName": "NestedResourceDeclarationSnippetInsertion",
          "Properties": {
            "name": "resource-without-defaults"
          }
        }
      ]
    }
  },
  {
    "label": "tags",
    "kind": "property",
    "detail": "tags",
    "documentation": {
      "kind": "markdown",
      "value": "Type: `DeploymentScriptTags`  \nResource tags.  \n"
    },
    "deprecated": false,
    "preselect": false,
    "sortText": "2_tags",
    "insertTextFormat": "plainText",
    "insertTextMode": "adjustIndentation",
    "textEdit": {
      "range": {},
      "newText": "tags:"
    }
  }
]