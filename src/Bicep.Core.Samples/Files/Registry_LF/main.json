{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "dev",
      "templateHash": "7108084961926898750"
    }
  },
  "functions": [],
  "variables": {
    "websites": [
      {
        "name": "fancy",
        "tag": "latest"
      },
      {
        "name": "plain",
        "tag": "plain-text"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-06-01",
      "name": "adotfrank-rg",
      "location": "[deployment().location]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "planDeploy",
      "resourceGroup": "adotfrank-rg",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "namePrefix": {
            "value": "hello"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "dev",
              "templateHash": "4938872769570543882"
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "B1"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}appPlan', parameters('namePrefix'))]",
              "location": "[resourceGroup().location]",
              "kind": "linux",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "properties": {
                "reserved": true
              }
            }
          ],
          "outputs": {
            "planId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', format('{0}appPlan', parameters('namePrefix')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', 'adotfrank-rg')]"
      ]
    },
    {
      "copy": {
        "name": "siteDeploy",
        "count": "[length(variables('websites'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}siteDeploy', variables('websites')[copyIndex()].name)]",
      "resourceGroup": "adotfrank-rg",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appPlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'adotfrank-rg'), 'Microsoft.Resources/deployments', 'planDeploy'), '2019-10-01').outputs.planId.value]"
          },
          "namePrefix": {
            "value": "[variables('websites')[copyIndex()].name]"
          },
          "dockerImage": {
            "value": "nginxdemos/hello"
          },
          "dockerImageTag": {
            "value": "[variables('websites')[copyIndex()].tag]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "dev",
              "templateHash": "228337352270462398"
            }
          },
          "parameters": {
            "namePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "dockerImage": {
              "type": "string"
            },
            "dockerImageTag": {
              "type": "string"
            },
            "appPlanId": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}site', parameters('namePrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "https://index.docker.io"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                      "value": ""
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                      "value": ""
                    },
                    {
                      "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                      "value": "false"
                    }
                  ],
                  "linuxFxVersion": "[format('DOCKER|{0}:{1}', parameters('dockerImage'), parameters('dockerImageTag'))]"
                },
                "serverFarmId": "[parameters('appPlanId')]"
              }
            }
          ],
          "outputs": {
            "siteUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', format('{0}site', parameters('namePrefix')))).hostNames[0]]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'adotfrank-rg'), 'Microsoft.Resources/deployments', 'planDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', 'adotfrank-rg')]"
      ]
    }
  ],
  "outputs": {
    "siteUrls": {
      "type": "array",
      "copy": {
        "count": "[length(variables('websites'))]",
        "input": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'adotfrank-rg'), 'Microsoft.Resources/deployments', format('{0}siteDeploy', variables('websites')[copyIndex()].name)), '2019-10-01').outputs.siteUrl.value]"
      }
    }
  }
}