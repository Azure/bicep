{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "1.9-experimental",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
    "_generator": {
      "name": "bicep",
      "version": "dev",
      "templateHash": "6759233609306016340"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to for the resources."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "linux-vm",
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      },
      "allowedValues": [
        "password",
        "sshPublicKey"
      ]
    },
    "adminPasswordOrKey": {
      "type": "secureString",
      "metadata": {
        "description": "Password or ssh key for the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2_v2",
      "metadata": {
        "description": "Size for the Virtual Machine."
      }
    },
    "createNewStorageAccount": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Determines whether or not a new storage account should be provisioned."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('storage{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the storage account"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account type"
      }
    },
    "storageAccountResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group for the existing storage account"
      }
    },
    "createNewVnet": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Determines whether or not a new virtual network should be provisioned."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "VirtualNetwork",
      "metadata": {
        "description": "Name of the virtual network"
      }
    },
    "addressPrefixes": {
      "type": "array",
      "defaultValue": [
        "10.0.0.0/16"
      ],
      "metadata": {
        "description": "Address prefix of the virtual network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet prefix of the virtual network"
      }
    },
    "vnetResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group for the existing virtual network"
      }
    },
    "createNewPublicIP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Determines whether or not a new public ip should be provisioned."
      }
    },
    "publicIPName": {
      "type": "string",
      "defaultValue": "PublicIp",
      "metadata": {
        "description": "Name of the public ip address"
      }
    },
    "publicIPDns": {
      "type": "string",
      "defaultValue": "[format('linux-vm-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "DNS of the public ip address for the VM"
      }
    },
    "publicIPResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group for the public ip address"
      }
    }
  },
  "variables": {
    "storageAccountId": "[if(parameters('createNewStorageAccount'), resourceInfo('storageAccount').id, resourceId(parameters('storageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts/', parameters('storageAccountName')))]",
    "subnetId": "[if(parameters('createNewVnet'), resourceInfo('subnet').id, resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName')))]",
    "publicIPId": "[if(parameters('createNewPublicIP'), resourceInfo('publicIP').id, resourceId(parameters('publicIPResourceGroupName'), 'Microsoft.Network/publicIPAddresses', parameters('publicIPName')))]"
  },
  "resources": {
    "storageAccount": {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-06-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    "publicIP": {
      "condition": "[parameters('createNewPublicIP')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2017-09-01",
      "name": "[parameters('publicIPName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIPDns')]"
        }
      }
    },
    "nsg": {
      "condition": "[parameters('createNewVnet')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "default-NSG",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-22",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    "vnet": {
      "condition": "[parameters('createNewVnet')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-09-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('addressPrefixes')]"
        }
      }
    },
    "subnet": {
      "condition": "[parameters('createNewVnet')]",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2017-09-01",
      "name": "[format('{0}/{1}', resourceInfo('vnet').name, parameters('subnetName'))]",
      "properties": {
        "addressPrefix": "[parameters('subnetPrefix')]",
        "networkSecurityGroup": {
          "id": "[resourceInfo('nsg').id]"
        }
      },
      "dependsOn": [
        "nsg",
        "vnet"
      ]
    },
    "nic": {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-09-01",
      "name": "[format('{0}-nic', parameters('vmName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              },
              "publicIPAddress": {
                "id": "[variables('publicIPId')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "publicIP",
        "subnet"
      ]
    },
    "vm": {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(not(equals(parameters('authenticationType'), 'password')), createObject('disablePasswordAuthentication', true(), 'ssh', createObject('publicKeys', createArray(createObject('path', format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername')), 'keyData', parameters('adminPasswordOrKey'))))), null())]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceInfo('nic').id]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(variables('storageAccountId')).primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "nic",
        "storageAccount"
      ]
    }
  }
}