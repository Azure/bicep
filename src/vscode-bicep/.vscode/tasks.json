// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process

// A task runner that calls a custom npm script that compiles the extension.
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "build",
      "type": "npm",
      "script": "build",
      "presentation": {
        "reveal": "silent"
      },
      "problemMatcher": {
        "owner": "webpack",
        "source": "ts",
        "applyTo": "allDocuments",
        "fileLocation": ["relative", "${cwd}"],
        "severity": "error",
        "pattern": [
          {
            "kind": "location",
            "regexp": "(ERROR|WARNING) in (.*?):(\\d+):(\\d+)",
            "severity": 1,
            "file": 2,
            "line": 3,
            "column": 4
          },
          {
            "regexp": "\\s*TS(\\d+):\\s*(.*)$",
            "code": 1,
            "message": 2
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "Compiling.*?|Compilation .*?starting"
          },
          "endsPattern": {
            "regexp": "[Cc]ompiled (.*?successfully|with .*?error)|[Cc]ompilation .*?finished"
          }
        }
      },
      "isBackground": true,
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "dependsOn": ["clean"],
      "dependsOrder": "sequence"
    },
    {
      "label": "build:prod",
      "type": "npm",
      "script": "build:prod",
      "presentation": {
        "reveal": "silent"
      },
      "problemMatcher": {
        "owner": "webpack",
        "source": "ts",
        "applyTo": "allDocuments",
        "fileLocation": ["relative", "${cwd}"],
        "severity": "error",
        "pattern": [
          {
            "kind": "location",
            "regexp": "(ERROR|WARNING) in (.*?):(\\d+):(\\d+)",
            "severity": 1,
            "file": 2,
            "line": 3,
            "column": 4
          },
          {
            "regexp": "\\s*TS(\\d+):\\s*(.*)$",
            "code": 1,
            "message": 2
          }
        ]
      },
      "group": "build",
      "dependsOn": ["clean"],
      "dependsOrder": "sequence"
    },
    {
      "label": "build:e2e",
      "type": "typescript",
      "tsconfig": "tsconfig.e2e.json",
      "problemMatcher": "$tsc",
      "group": "build",
      "presentation": {
        "reveal": "silent"
      },
      "dependsOn": ["build:prod"],
      "dependsOrder": "sequence"
    },
    {
      "label": "build:e2e:dev",
      "type": "typescript",
      "tsconfig": "tsconfig.e2e.dev.json",
      "problemMatcher": "$tsc",
      "group": "build",
      "presentation": {
        "reveal": "silent"
      },
      "dependsOn": ["build"],
      "dependsOrder": "sequence"
    },
    {
      "label": "watch",
      "type": "npm",
      "script": "watch",
      "problemMatcher": {
        "owner": "webpack",
        "source": "ts",
        "applyTo": "allDocuments",
        "fileLocation": ["relative", "${cwd}"],
        "severity": "error",
        "pattern": [
          {
            "kind": "location",
            "regexp": "(ERROR|WARNING) in (.*?):(\\d+):(\\d+)",
            "severity": 1,
            "file": 2,
            "line": 3,
            "column": 4
          },
          {
            "regexp": "\\s*TS(\\d+):\\s*(.*)$",
            "code": 1,
            "message": 2
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "Compiling.*?|Compilation .*?starting"
          },
          "endsPattern": {
            "regexp": "[Cc]ompiled (.*?successfully|with .*?error)|[Cc]ompilation .*?finished"
          }
        }
      },
      "isBackground": true,
      "presentation": {
        "reveal": "silent"
      },
      "group": "build",
      "dependsOn": ["clean"],
      "dependsOrder": "sequence"
    },
    {
      "label": "clean",
      "type": "npm",
      "script": "clean",
      "group": "build",
      "presentation": {
        "reveal": "silent"
      }
    }
  ]
}
