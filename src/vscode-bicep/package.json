{
  "name": "vscode-bicep",
  "displayName": "Bicep",
  "description": "Bicep language support for Visual Studio Code",
  "author": "Microsoft Corporation",
  "license": "MIT",
  "version": "0.0.0-placeholder",
  "publisher": "ms-azuretools",
  "icon": "icons/bicep-logo-256.png",
  "preview": false,
  "aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
  "engines": {
    "vscode": "^1.72.0"
  },
  "categories": [
    "Azure",
    "Programming Languages"
  ],
  "keywords": [
    "Bicep",
    "Azure Resource Manager",
    "ARM Template",
    "Azure"
  ],
  "bugs": {
    "url": "https://github.com/Azure/bicep/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Azure/bicep"
  },
  "galleryBanner": {
    "color": "E7F1FA",
    "theme": "light"
  },
  "homepage": "https://github.com/Azure/bicep/blob/main/README.md",
  "activationEvents": [
    "onLanguage:bicep",
    "onCommand:bicep.build",
    "onCommand:bicep.decompile",
    "onCommand:bicep.generateParams",
    "onCommand:bicep.createConfigFile",
    "onCommand:bicep.deploy",
    "onCommand:bicep.forceModulesRestore",
    "onCommand:bicep.insertResource",
    "onCommand:bicep.importKubernetesManifest",
    "onCommand:bicep.showSource",
    "onCommand:bicep.showVisualizer",
    "onCommand:bicep.showVisualizerToSide",
    "onCommand:bicep.gettingStarted.copyToClipboard",
    "onCommand:bicep.gettingStarted.createBicepFile",
    "onCommand:bicep.gettingStarted.openBicepFile",
    "onWebviewPanel:bicep.visualizer"
  ],
  "main": "./out/extension",
  "enabledApiProposals": [],
  "contributes": {
    "configurationDefaults": {
      "[bicep]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        "files.insertFinalNewline": true,
        "editor.suggestSelection": "first",
        "editor.suggest.snippetsPreventQuickSuggestions": false,
        "editor.suggest.showWords": false
      }
    },
    "configuration": {
      "type": "object",
      "title": "Bicep",
      "properties": {
        "bicep.trace.server": {
          "type": "string",
          "enum": [
            "Off",
            "Messages",
            "Verbose"
          ],
          "default": "Off",
          "description": "Configure tracing of messages sent to the Bicep language server.",
          "scope": "window"
        },
        "bicep.enableOutputTimestamps": {
          "type": "boolean",
          "description": "Prepend each line displayed in the Bicep Operations output channel with a timestamp.",
          "default": true,
          "$comment": "This is used by vscode-azuretools package and has to be in the following format: <extensionPrefix>.enableOutputTimestamps"
        }
      }
    },
    "jsonValidation": [
      {
        "fileMatch": "bicepconfig.json",
        "url": "./schemas/bicepconfig.schema.json"
      }
    ],
    "languages": [
      {
        "id": "bicep",
        "aliases": [
          "Bicep",
          "bicep"
        ],
        "extensions": [
          ".bicep"
        ],
        "configuration": "./syntaxes/language-configuration.json"
      },
      {
        "id": "jsonc",
        "filenames": [
          "bicepconfig.json"
        ]
      }
    ],
    "grammars": [
      {
        "scopeName": "markdown.bicep.codeblock",
        "path": "./syntaxes/bicep.codeblock.json",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.block.bicep": "bicep"
        }
      },
      {
        "language": "bicep",
        "scopeName": "source.bicep",
        "path": "./syntaxes/bicep.tmlanguage"
      }
    ],
    "commands": [
      {
        "command": "bicep.showVisualizer",
        "title": "Open Bicep Visualizer",
        "category": "Bicep",
        "icon": "$(type-hierarchy-sub)"
      },
      {
        "command": "bicep.showVisualizerToSide",
        "title": "Open Bicep Visualizer to the Side",
        "category": "Bicep",
        "icon": "$(type-hierarchy-sub)"
      },
      {
        "command": "bicep.showSource",
        "title": "Open Source",
        "category": "Bicep",
        "icon": "$(go-to-file)"
      },
      {
        "command": "bicep.build",
        "title": "Build ARM Template",
        "category": "Bicep",
        "icon": "$(output)"
      },
      {
        "command": "bicep.decompile",
        "title": "Decompile into Bicep",
        "category": "Bicep",
        "enablement": "!bicep.cannotDecompile || !editorFocus",
        "$comment1": "Intentionally enabling this command when the language server has not yet been loaded, otherwise we must be loaded for all JSON files. If user selects the command when the JSON file is not an ARM template, it will load then give a meaningful error",
        "$comment2": "Also keeping it enabled when the editor doesn't have focus, to allow command to appear enabled on e.g. right-clicking in explorer"
      },
      {
        "command": "bicep.generateParams",
        "title": "Generate Parameters File",
        "category": "Bicep",
        "icon": "$(output)"
      },
      {
        "command": "bicep.deploy",
        "title": "Deploy Bicep File...",
        "category": "Bicep",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "bicep.forceModulesRestore",
        "title": "Restore Bicep Modules (Force)",
        "category": "Bicep"
      },
      {
        "command": "bicep.insertResource",
        "title": "Insert Resource...",
        "category": "Bicep",
        "icon": "$(cloud-download)"
      },
      {
        "command": "bicep.importKubernetesManifest",
        "title": "Import Kubernetes Manifest (EXPERIMENTAL)",
        "category": "Bicep",
        "icon": "$(cloud-download)"
      },
      {
        "command": "bicep.createConfigFile",
        "title": "Create Bicep Configuration File",
        "category": "Bicep"
      },
      {
        "$section": "================== Walkthrough commands (not visible to users) ==================",
        "command": "bicep.gettingStarted.createBicepFile",
        "title": "Create Empty Bicep File (Walkthrough)",
        "category": "Bicep Internal"
      },
      {
        "command": "bicep.gettingStarted.openBicepFile",
        "title": "Open Existing Bicep File (Walkthrough)",
        "category": "Bicep Internal"
      },
      {
        "command": "bicep.gettingStarted.copyToClipboard",
        "title": "Copy walkthrough code to the clipboard (Walkthrough)",
        "category": "Bicep Internal"
      }
    ],
    "keybindings": [
      {
        "command": "bicep.build",
        "key": "ctrl+shift+b",
        "mac": "cmd+alt+b",
        "when": "resourceLangId == bicep"
      },
      {
        "command": "bicep.forceModulesRestore",
        "key": "ctrl+m r",
        "mac": "cmd+m r",
        "when": "resourceLangId == bicep"
      },
      {
        "command": "bicep.showVisualizerToSide",
        "key": "ctrl+k v",
        "mac": "cmd+k v",
        "when": "resourceLangId == bicep"
      },
      {
        "command": "bicep.insertResource",
        "key": "ctrl+k i",
        "mac": "cmd+k i",
        "when": "resourceLangId == bicep"
      },
      {
        "command": "bicep.decompile",
        "when": "editorFocus && (resourceLangId == json || resourceLangId == jsonc || resourceLangId == arm-template)"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "bicep.showVisualizerToSide",
          "when": "editorLangId == bicep",
          "alt": "bicep.showVisualizer",
          "group": "navigation"
        },
        {
          "command": "bicep.showSource",
          "when": "bicepVisualizerFocus",
          "group": "navigation"
        },
        {
          "command": "bicep.insertResource",
          "when": "editorLangId == bicep",
          "group": "1_bicep"
        }
      ],
      "explorer/context": [
        {
          "command": "bicep.build",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.forceModulesRestore",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.generateParams",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.insertResource",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.deploy",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_2_deploy"
        },
        {
          "command": "bicep.showVisualizer",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_3_visualize"
        },
        {
          "command": "bicep.showVisualizerToSide",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_3_visualize"
        },
        {
          "command": "bicep.decompile",
          "when": "resourceLangId == json || resourceLangId == jsonc || resourceLangId == arm-template",
          "group": "9_bicep_in_json"
        }
      ],
      "editor/title/context": [
        {
          "command": "bicep.build",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.forceModulesRestore",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.generateParams",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.insertResource",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.deploy",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_2_deploy"
        },
        {
          "command": "bicep.showVisualizer",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_3_visualize"
        },
        {
          "command": "bicep.showVisualizerToSide",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_3_visualize"
        },
        {
          "command": "bicep.decompile",
          "when": "resourceLangId == json || resourceLangId == jsonc || resourceLangId == arm-template",
          "group": "9_bicep_in_json"
        }
      ],
      "editor/context": [
        {
          "command": "bicep.build",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.forceModulesRestore",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.generateParams",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.insertResource",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_1_edit"
        },
        {
          "command": "bicep.deploy",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_2_deploy"
        },
        {
          "command": "bicep.showVisualizer",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_3_visualize"
        },
        {
          "command": "bicep.showVisualizerToSide",
          "when": "resourceLangId == bicep",
          "group": "2_bicep_3_visualize"
        },
        {
          "command": "bicep.decompile",
          "when": "resourceLangId == json || resourceLangId == jsonc || resourceLangId == arm-template",
          "group": "9_bicep_in_json"
        }
      ],
      "commandPalette": [
        {
          "command": "bicep.build",
          "group": "0_bicep"
        },
        {
          "command": "bicep.generateParams",
          "group": "0_bicep"
        },
        {
          "command": "bicep.deploy",
          "group": "0_bicep"
        },
        {
          "command": "bicep.forceModulesRestore",
          "group": "0_bicep"
        },
        {
          "command": "bicep.insertResource",
          "group": "0_bicep"
        },
        {
          "command": "bicep.showVisualizer",
          "group": "0_bicep"
        },
        {
          "command": "bicep.showVisualizerToSide",
          "group": "0_bicep"
        },
        {
          "command": "bicep.importKubernetesManifest"
        },
        {
          "command": "bicep.showSource",
          "when": "never"
        },
        {
          "command": "bicep.gettingStarted.createBicepFile",
          "when": "never"
        },
        {
          "command": "bicep.gettingStarted.openBicepFile",
          "when": "never"
        },
        {
          "command": "bicep.gettingStarted.copyToClipboard",
          "when": "never"
        }
      ]
    },
    "snippets": [
      {
        "language": "jsonc",
        "path": "vscode-snippets/jsonc-snippets.jsonc"
      }
    ],
    "walkthroughs.$comments": [
      "Documentation: https://code.visualstudio.com/api/references/contribution-points#contributes.walkthroughs",
      "",
      "Automatically completes if a markdown button is pressed or there are no commands and no completion events",
      "Available completion events include:",
      "  onCommand:myCommand.id: Check off step when a command has been run.",
      "  onSettingChanged:mySetting.id: Check off step once the given setting has been modified.",
      "  onContext:contextKeyExpression: Check off step when a context key expression evaluates true.",
      "  extensionInstalled:myExt.id: Check off step if the given extension is installed.",
      "  onView:myView.id: Check off step once a given view becomes visible.",
      "  onLink:https://...: Check off step once a given link has been opened via a Walkthrough.",
      "",
      "Passing arguments to commands: See https://github.com/Microsoft/vscode/issues/69757,",
      "  Example: [Copy code to clipboard](command:bicep.gettingStarted.copyToClipboard?%7B%22step%22%3A%22resources%22%7D)",
      "",
      "Walkthrough commands (bicep.gettingStarted.xxx) are automatically marked in telemetry as being from the walkthrough.  Regular commands",
      "  which are called from the walkthrough markdown should be marked with a query string ?walkthrough=true to have it marked in telemetry.",
      "  Example: [Open Visualizer](command:bicep.showVisualizerToSide?%7B%22walkthrough%22%3A%22true%22%7D)"
    ],
    "walkthroughs": [
      {
        "id": "gettingStarted",
        "title": "Getting Started with Bicep",
        "description": "Learn about Bicep and the Bicep extension for Visual Studio Code",
        "steps": [
          {
            "id": "openBicepFile",
            "title": "Open a Bicep File",
            "description": "To get started with Bicep extension features, open or create a Bicep file (any file with '.bicep' extension).\n[Open Bicep file](command:bicep.gettingStarted.openBicepFile)\n[Create Bicep file](command:bicep.gettingStarted.createBicepFile)\nTip: [Close the side bar for more space](command:workbench.action.closeSidebar)",
            "media": {
              "image": "media/walkthroughs/gettingStarted/1_BicepLogoImage.png",
              "altText": "Bicep logo"
            },
            "completionEvents": [
              "onCommand:bicep.gettingStarted.createBicepFile",
              "onCommand:bicep.gettingStarted.openBicepFile",
              "onLanguage:bicep"
            ]
          },
          {
            "id": "addParameters",
            "title": "Add parameters",
            "description": "Use Bicep's IntelliSense and snippets to help you create a deployable Bicep file in minutes.",
            "media": {
              "markdown": "media/walkthroughs/gettingStarted/2_Type_Params.md"
            }
          },
          {
            "id": "addResources",
            "title": "Add resources",
            "description": "Use Bicep's IntelliSense and snippets to help you create a deployable Bicep file in minutes.",
            "media": {
              "markdown": "media/walkthroughs/gettingStarted/3_Type_Resources.md"
            }
          },
          {
            "id": "visualizeYourResources",
            "title": "Visualize your resources",
            "description": "The Visualizer gives you a representation of the resources in your Bicep file.\n[Open Visualizer](command:bicep.showVisualizerToSide?%7B%22walkthrough%22%3A%22true%22%7D)",
            "media": {
              "markdown": "media/walkthroughs/gettingStarted/4_Show_Visualizer.md"
            },
            "completionEvents": [
              "onCommand:bicep.showVisualizerToSide",
              "onCommand:bicep.showVisualizer"
            ]
          },
          {
            "id": "deployToAzure",
            "title": "Deploy to Azure",
            "description": "It's time to get these resources into Azure. If you don't have the [Azure Account Extension](command:extension.open?%5B%22ms-vscode.azure-account%22%5D) installed, you will need it to complete this step.\n[Deploy](command:bicep.deploy?%7B%22walkthrough%22%3A%22true%22%7D)",
            "media": {
              "image": "media/walkthroughs/gettingStarted/5_Deploy.gif",
              "altText": "Example of deploying Bicep file to Azure"
            },
            "completionEvents": [
              "onCommand:bicep.deploy"
            ]
          },
          {
            "id": "learnMore",
            "title": "Learn More",
            "description": "Great Job! You've completed Getting Started with Bicep. But don't stop now!\nCheck out our [Bicep Documentation](https://aka.ms/Bicep) to learn more about importing Bicep files as [modules](https://aka.ms/bicep/docs/modules) and [other extension features](https://aka.ms/bicep/docs/vscode).\nWanna take a deep dive into the Bicep language? Take a look at [Microsoft Learn - Bicep](https://aka.ms/microsoftlearnbicep).",
            "media": {
              "image": "media/walkthroughs/gettingStarted/1_BicepLogoImage.png",
              "altText": "Bicep logo"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run build:prod",
    "build": "webpack --mode development",
    "build:prod": "webpack --mode production",
    "build:e2e": "tsc -p ./tsconfig.e2e.json",
    "watch": "webpack --watch --mode development --stats=minimal",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "test:e2e": "node ./out/test/e2e/runTests.js",
    "test:unit": "jest --config jest.config.unit.js",
    "test:snapshot": "jest --config jest.config.snapshot.js",
    "test:update-snapshot": "jest --config jest.config.snapshot.js --updateSnapshot",
    "testlocal:e2e": "(export BICEP_LANGUAGE_SERVER_PATH=${INIT_CWD}/../Bicep.LangServer/bin/Debug/net6.0/Bicep.LangServer.dll || set BICEP_LANGUAGE_SERVER_PATH=%INIT_CWD%/../Bicep.LangServer/bin/Debug/net6.0/Bicep.LangServer.dll) && npm run build && npm run build:e2e && npm run test:e2e",
    "clean": "rimraf ./out ./coverage",
    "package": "npm run clean && nbgv-setversion && vsce package --githubBranch main --out ./vscode-bicep.vsix && nbgv-setversion --reset",
    "packagelocal": "rimraf ./bicepLanguageServer && cp -r ../Bicep.LangServer/bin/Debug/net6.0 ./bicepLanguageServer && npm run package",
    "params": "node ./enableParams.js"
  },
  "devDependencies": {
    "@types/copy-webpack-plugin": "^10.1.0",
    "@types/cytoscape": "^3.19.9",
    "@types/fs-extra": "^9.0.13",
    "@types/jest": "^27.0.2",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.11.9",
    "@types/react": "^18.0.26",
    "@types/react-dom": "^18.0.9",
    "@types/react-test-renderer": "^18.0.0",
    "@types/semver": "^7.3.13",
    "@types/styled-components": "^5.1.26",
    "@types/triple-beam": "^1.3.2",
    "@types/vscode": "^1.67.0",
    "@types/webpack": "^5.28.0",
    "@typescript-eslint/eslint-plugin": "^5.46.0",
    "@typescript-eslint/parser": "^5.46.0",
    "@vscode/test-electron": "^2.2.0",
    "copy-webpack-plugin": "^11.0.0",
    "esbuild-loader": "^2.20.0",
    "eslint": "^8.29.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-header": "^3.1.1",
    "eslint-plugin-jest": "^27.1.6",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react": "^7.31.11",
    "fork-ts-checker-webpack-plugin": "^7.2.13",
    "jest": "^27.5.1",
    "jest-styled-components": "^7.1.1",
    "json-merger": "^1.1.9",
    "moment": "^2.29.4",
    "ncp": "^2.0.0",
    "nerdbank-gitversioning": "^3.5.119",
    "prettier": "^2.8.1",
    "react-test-renderer": "^18.2.0",
    "rimraf": "^3.0.2",
    "semver": "^7.3.8",
    "svg-inline-loader": "^0.8.2",
    "terser-webpack-plugin": "5.3.6",
    "ts-jest": "^27.1.4",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.3",
    "vsce": "^2.14.0",
    "webpack": "^5.75.0",
    "webpack-cli": "^4.10.0"
  },
  "dependencies": {
    "@azure/arm-managementgroups": "2.0.2",
    "@azure/arm-resources": "^5.1.0",
    "@azure/arm-subscriptions": "^5.1.0",
    "@azure/identity": "^3.1.2",
    "@microsoft/vscode-azext-azureutils": "^0.3.5",
    "@microsoft/vscode-azext-utils": "^0.3.15",
    "cytoscape": "^3.23.0",
    "cytoscape-elk": "^2.1.0",
    "fs-extra": "^11.1.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-icons": "^4.6.0",
    "styled-components": "^5.3.6",
    "triple-beam": "^1.3.0",
    "vscode-languageclient": "^8.0.2",
    "winston": "^3.8.2",
    "winston-transport": "^4.5.0"
  },
  "extensionDependencies": [
    "ms-dotnettools.vscode-dotnet-runtime"
  ]
}
