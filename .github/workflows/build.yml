name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  CI: true
  # don't print dotnet logo
  DOTNET_NOLOGO: true
  # disable telemetry (reduces dotnet tool output in logs)
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-cli:
    name: Build CLI (${{ matrix.rid }})
    runs-on: ubuntu-latest

    strategy:
      # let us get failures from other jobs even if one fails
      fail-fast: false
      # should be the full list of supported RIDs with customizations expressed via the parameters under each item
      matrix:
        rid:
          - win-x64
          - linux-x64
          - linux-musl-x64
          - osx-x64
          - linux-arm64
          - win-arm64
          - osx-arm64

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
          submodules: true

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4

      - name: Build Bicep.sln
        run: dotnet build --configuration release

      - name: Publish Bicep
        run: dotnet publish --configuration release --self-contained true -r ${{ matrix.rid }} ./src/Bicep.Cli/Bicep.Cli.csproj

      - name: Upload Bicep
        uses: actions/upload-artifact@v3
        with:
          name: bicep-release-${{ matrix.rid }}
          path: ./src/Bicep.Cli/bin/release/net8.0/${{ matrix.rid }}/publish/*
          if-no-files-found: error

      - name: Upload Bicep project assets file
        uses: actions/upload-artifact@v3
        with:
          name: bicep-project-assets-${{ matrix.rid }}
          path: ./src/Bicep.Cli/obj/project.assets.json
          if-no-files-found: error

  build-nugets:
    name: Build NuGet Packages
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
          submodules: true

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4

      - name: Pack
        run: dotnet pack --configuration release

      - name: Upload Packages
        uses: actions/upload-artifact@v3
        with:
          name: bicep-nupkg-any
          path: out/*
          if-no-files-found: error

  build-vs-ext:
    name: Build Visual Studio Extension
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
          submodules: true

      # needed by the GenerateNotice package
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3

      - name: Build Bicep.sln
        run: dotnet build --configuration release

      - name: Build BicepInVisualStudio.sln
        run: msbuild src/vs-bicep/BicepInVisualStudio.sln /restore /p:Configuration=Release /v:m /bl:./src/binlog/bicep_in_visual_studio_build.binlog

      - name: Upload BicepInVisualStudio.sln build binlog
        uses: actions/upload-artifact@v3
        with:
          name: build-binlog-files
          path: ./src/binlog/bicep_in_visual_studio_build.binlog
          if-no-files-found: error

      - name: Upload BicepLanguageServerClient VSIX
        uses: actions/upload-artifact@v3
        with:
          name: Bicep.VSLanguageServerClient.Vsix.vsix
          path: ./src/vs-bicep/Bicep.VSLanguageServerClient.Vsix/bin/Release/vs-bicep.vsix
          if-no-files-found: error

      - name: Run bicep in visual studio unit tests
        uses: microsoft/vstest-action@v1.0.0
        with:
          testAssembly: Bicep.VSLanguageServerClient.UnitTests.dll
          runInParallel: true
          searchFolder: ./src/vs-bicep/Bicep.VSLanguageServerClient.UnitTests/bin/Release/net472
        # Temporary workaround to force a green build - VS tests are flaky
        # Proper fix tracked under https://github.com/Azure/bicep/issues/8078
        continue-on-error: true

      - name: Install bicep in Visual Studio
        run: ./src/vs-bicep/Install.cmd

      - name: Run bicep in visual studio integration tests
        uses: microsoft/vstest-action@v1.0.0
        with:
          testAssembly: Bicep.VSLanguageServerClient.IntegrationTests.dll
          runInParallel: false
          searchFolder: ./src/vs-bicep/Bicep.VSLanguageServerClient.IntegrationTests/bin/Release/net472
        # Temporary workaround to force a green build - VS tests are flaky
        # Proper fix tracked under https://github.com/Azure/bicep/issues/8078
        continue-on-error: true
