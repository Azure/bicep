{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "BicepExampleRG"
    },
    "location": {
      "type": "string",
      "defaultValue": "australiaeast"
    },
    "actionGroupName": {
      "type": "string",
      "defaultValue": "BicepExampleAG"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "resourceGroup",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "resourceGroupName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2020-06-01",
              "name": "[parameters('resourceGroupName')]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "rgId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
            },
            "rgName": {
              "type": "string",
              "value": "[parameters('resourceGroupName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "actionGroup",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "actionGroupName": {
            "value": "[parameters('actionGroupName')]"
          },
          "actionGroupEnabled": {
            "value": true
          },
          "actionGroupShortName": {
            "value": "azspgcln"
          },
          "actionGroupEmailName": {
            "value": "jloudon"
          },
          "actionGroupEmail": {
            "value": "jesse.loudon@lab3.com.au"
          },
          "actionGroupAlertSchema": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "actionGroupName": {
              "type": "string",
              "defaultValue": "AzureSpringCleanAG"
            },
            "actionGroupEnabled": {
              "type": "bool",
              "defaultValue": true
            },
            "actionGroupShortName": {
              "type": "string",
              "defaultValue": "azspgcln"
            },
            "actionGroupEmailName": {
              "type": "string",
              "defaultValue": "jloudon"
            },
            "actionGroupEmail": {
              "type": "string",
              "defaultValue": "jesse.loudon@lab3.com.au"
            },
            "actionGroupAlertSchema": {
              "type": "bool",
              "defaultValue": true
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "microsoft.insights/actionGroups",
              "apiVersion": "2019-06-01",
              "location": "global",
              "name": "[parameters('actionGroupName')]",
              "properties": {
                "enabled": "[parameters('actionGroupEnabled')]",
                "groupShortName": "[parameters('actionGroupShortName')]",
                "emailReceivers": [
                  {
                    "name": "[parameters('actionGroupEmailName')]",
                    "emailAddress": "[parameters('actionGroupEmail')]",
                    "useCommonAlertSchema": "[parameters('actionGroupAlertSchema')]"
                  }
                ]
              }
            }
          ],
          "outputs": {
            "actionGroupId": {
              "type": "string",
              "value": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupName'))]"
            },
            "actionGroupName": {
              "type": "string",
              "value": "[parameters('actionGroupName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'resourceGroup')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "policy",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "actionGroupName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'actionGroup'), '2019-10-01').outputs.actionGroupName.value]"
          },
          "actionGroupRG": {
            "value": "[parameters('resourceGroupName')]"
          },
          "actionGroupId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'actionGroup'), '2019-10-01').outputs.actionGroupId.value]"
          },
          "metricAlertResourceNamespace": {
            "value": "Microsoft.Network/loadBalancers"
          },
          "metricAlertName": {
            "value": "DipAvailability"
          },
          "metricAlertDimension1": {
            "value": "ProtocolType"
          },
          "metricAlertDimension2": {
            "value": "FrontendIPAddress"
          },
          "metricAlertDimension3": {
            "value": "BackendIPAddress"
          },
          "metricAlertDescription": {
            "value": "Average Load Balancer health probe status per time duration"
          },
          "metricAlertSeverity": {
            "value": "2"
          },
          "metricAlertEnabled": {
            "value": "true"
          },
          "metricAlertEvaluationFrequency": {
            "value": "PT15M"
          },
          "metricAlertWindowSize": {
            "value": "PT1H"
          },
          "metricAlertSensitivity": {
            "value": "Medium"
          },
          "metricAlertOperator": {
            "value": "LessThan"
          },
          "metricAlertTimeAggregation": {
            "value": "Average"
          },
          "metricAlertCriterionType": {
            "value": "DynamicThresholdCriterion"
          },
          "metricAlertAutoMitigate": {
            "value": "true"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "actionGroupName": {
              "type": "string"
            },
            "actionGroupRG": {
              "type": "string"
            },
            "actionGroupId": {
              "type": "string"
            },
            "metricAlertResourceNamespace": {
              "type": "string"
            },
            "metricAlertName": {
              "type": "string"
            },
            "metricAlertDimension1": {
              "type": "string"
            },
            "metricAlertDimension2": {
              "type": "string"
            },
            "metricAlertDimension3": {
              "type": "string"
            },
            "metricAlertDescription": {
              "type": "string"
            },
            "metricAlertSeverity": {
              "type": "string"
            },
            "metricAlertEnabled": {
              "type": "string"
            },
            "metricAlertEvaluationFrequency": {
              "type": "string"
            },
            "metricAlertWindowSize": {
              "type": "string"
            },
            "metricAlertSensitivity": {
              "type": "string"
            },
            "metricAlertOperator": {
              "type": "string"
            },
            "metricAlertTimeAggregation": {
              "type": "string"
            },
            "metricAlertCriterionType": {
              "type": "string"
            },
            "metricAlertAutoMitigate": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "policyDefCategory": "Custom",
            "policySource": "Bicep"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyDefinitions",
              "apiVersion": "2020-09-01",
              "name": "bicepExampleDINEpolicy",
              "properties": {
                "displayName": "DINE metric alert to Load Balancer for dipAvailability",
                "description": "DeployIfNotExists a metric alert to Load Balancers for dipAvailability (Average Load Balancer health probe status per time duration)",
                "policyType": "Custom",
                "mode": "All",
                "metadata": {
                  "category": "[variables('policyDefCategory')]",
                  "source": "[variables('policySource')]",
                  "version": "0.1.0"
                },
                "parameters": {},
                "policyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "[parameters('metricAlertResourceNamespace')]"
                      },
                      {
                        "field": "Microsoft.Network/loadBalancers/sku.name",
                        "equals": "Standard"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                      ],
                      "type": "Microsoft.Insights/metricAlerts",
                      "existenceCondition": {
                        "allOf": [
                          {
                            "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                            "equals": "[parameters('metricAlertResourceNamespace')]"
                          },
                          {
                            "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                            "equals": "[parameters('metricAlertName')]"
                          },
                          {
                            "field": "Microsoft.Insights/metricalerts/scopes[*]",
                            "equals": "[format('[concat(subscription().id, ''/resourceGroups/'', resourceGroup().name, ''/providers/{0}/'', {1}(''fullName''))]', parameters('metricAlertResourceNamespace'), 'field')]"
                          }
                        ]
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "String",
                                "metadata": {
                                  "displayName": "resourceName",
                                  "description": "Name of the resource"
                                }
                              },
                              "resourceId": {
                                "type": "String",
                                "metadata": {
                                  "displayName": "resourceId",
                                  "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                }
                              },
                              "resourceLocation": {
                                "type": "String",
                                "metadata": {
                                  "displayName": "resourceLocation",
                                  "description": "Location of the resource"
                                }
                              },
                              "actionGroupName": {
                                "type": "String",
                                "metadata": {
                                  "displayName": "actionGroupName",
                                  "description": "Name of the Action Group"
                                }
                              },
                              "actionGroupRG": {
                                "type": "String",
                                "metadata": {
                                  "displayName": "actionGroupRG",
                                  "description": "Resource Group containing the Action Group"
                                }
                              },
                              "actionGroupId": {
                                "type": "String",
                                "metadata": {
                                  "displayName": "actionGroupId",
                                  "description": "The ID of the action group that is triggered when the alert is activated or deactivated"
                                }
                              }
                            },
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/metricAlerts",
                                "apiVersion": "2018-03-01",
                                "name": "[format('[concat({0}''resourceName''), ''-{1}'')]', 'parameters(', parameters('metricAlertName'))]",
                                "location": "global",
                                "properties": {
                                  "description": "[parameters('metricAlertDescription')]",
                                  "severity": "[parameters('metricAlertResourceNamespace')]",
                                  "enabled": "[parameters('metricAlertEnabled')]",
                                  "scopes": [
                                    "[format('[{0}''resourceId'')]', 'parameters(')]"
                                  ],
                                  "evaluationFrequency": "[parameters('metricAlertEvaluationFrequency')]",
                                  "windowSize": "[parameters('metricAlertWindowSize')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "alertSensitivity": "[parameters('metricAlertSensitivity')]",
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "2",
                                          "minFailingPeriodsToAlert": "1"
                                        },
                                        "name": "Metric1",
                                        "metricNamespace": "[parameters('metricAlertResourceNamespace')]",
                                        "metricName": "[parameters('metricAlertName')]",
                                        "dimensions": [
                                          {
                                            "name": "[parameters('metricAlertDimension1')]",
                                            "operator": "Include",
                                            "values": [
                                              "*"
                                            ]
                                          },
                                          {
                                            "name": "[parameters('metricAlertDimension2')]",
                                            "operator": "Include",
                                            "values": [
                                              "*"
                                            ]
                                          },
                                          {
                                            "name": "[parameters('metricAlertDimension3')]",
                                            "operator": "Include",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "operator": "[parameters('metricAlertOperator')]",
                                        "timeAggregation": "[parameters('metricAlertTimeAggregation')]",
                                        "criterionType": "[parameters('metricAlertCriterionType')]"
                                      }
                                    ],
                                    "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                                  },
                                  "autoMitigate": "[parameters('metricAlertAutoMitigate')]",
                                  "targetResourceType": "[parameters('metricAlertResourceNamespace')]",
                                  "targetResourceRegion": "[format('[{0}''resourceLocation'')]', 'parameters(')]",
                                  "actions": [
                                    {
                                      "actionGroupId": "[parameters('actionGroupId')]",
                                      "webHookProperties": {}
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "parameters": {
                            "resourceName": {
                              "value": "[format('[{0}(''name'')]', 'field')]"
                            },
                            "resourceId": {
                              "value": "[format('[{0}(''id'')]', 'field')]"
                            },
                            "resourceLocation": {
                              "value": "[format('[{0}(''location'')]', 'field')]"
                            },
                            "actionGroupName": {
                              "value": "[parameters('actionGroupName')]"
                            },
                            "actionGroupRG": {
                              "value": "[parameters('actionGroupRG')]"
                            },
                            "actionGroupID": {
                              "value": "[parameters('actionGroupId')]"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policySetDefinitions",
              "apiVersion": "2020-09-01",
              "name": "bicepExampleInitiative",
              "properties": {
                "policyType": "Custom",
                "displayName": "Bicep Example Initiative",
                "description": "Bicep Example Initiative",
                "metadata": {
                  "category": "[variables('policyDefCategory')]",
                  "source": "[variables('policySource')]",
                  "version": "0.1.0"
                },
                "parameters": {},
                "policyDefinitions": [
                  {
                    "policyDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/policyDefinitions', 'bicepExampleDINEpolicy')]",
                    "parameters": {}
                  }
                ]
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Authorization/policyDefinitions', 'bicepExampleDINEpolicy')]"
              ]
            }
          ],
          "outputs": {
            "bicepExampleInitiativeId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Authorization/policySetDefinitions', 'bicepExampleInitiative')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'actionGroup')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "assignment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "bicepExampleInitiativeId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', 'policy'), '2019-10-01').outputs.bicepExampleInitiativeId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "bicepExampleInitiativeId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "bicepExampleAssignment",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "displayName": "Bicep Example Assignment",
                "description": "Bicep Example Assignment",
                "enforcementMode": "Default",
                "metadata": {
                  "source": "Bicep",
                  "version": "0.1.0"
                },
                "policyDefinitionId": "[parameters('bicepExampleInitiativeId')]",
                "parameters": {},
                "nonComplianceMessages": [
                  {
                    "message": "Resource is not compliant with a DeployIfNotExists policy"
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'policy')]"
      ]
    }
  ],
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.1.62928",
      "templateHash": "1192602054325006482"
    }
  }
}