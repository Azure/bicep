{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "vnetname": {
      "type": "string"
    },
    "addressprefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the VNet Address Prefix."
      },
      "defaultValue": "10.0.1.0/24"
    },
    "serversubnetprefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the Subnet Address Prefix for the server subnet"
      },
      "defaultValue": "10.0.1.0/26"
    },
    "bastionsubnetprefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the Subnet Address Prefix for the bastion subnet"
      },
      "defaultValue": "10.0.1.64/26"
    },
    "gatewaysubnetprefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the Subnet Address Prefix for the GatewaySubnet"
      },
      "defaultValue": "10.0.1.128/26"
    },
    "firewallsubnetprefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the Subnet Address Prefix for the AzureFirewallSubnet"
      },
      "defaultValue": "10.0.1.192/26"
    }
  },
  "functions": [],
  "variables": {
    "servernsgname": "[format('{0}-snet-servers-nsg', parameters('vnetname'))]",
    "bastionnsgname": "[format('{0}-AzureBastionSubnet-nsg', parameters('vnetname'))]",
    "bastionnsgrules": {
      "securityRules": [
        {
          "name": "bastion-in-allow",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationPortRange": "443",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 100,
            "direction": "Inbound"
          }
        },
        {
          "name": "bastion-control-in-allow",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "sourceAddressPrefix": "GatewayManager",
            "destinationPortRanges": [
              "443",
              "4443"
            ],
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 120,
            "direction": "Inbound"
          }
        },
        {
          "name": "bastion-in-deny",
          "properties": {
            "protocol": "*",
            "sourcePortRange": "*",
            "destinationPortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Deny",
            "priority": 4096,
            "direction": "Inbound"
          }
        },
        {
          "name": "bastion-vnet-ssh-out-allow",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationPortRange": "22",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 100,
            "direction": "Outbound"
          }
        },
        {
          "name": "bastion-vnet-rdp-out-allow",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationPortRange": "3389",
            "destinationAddressPrefix": "VirtualNetwork",
            "access": "Allow",
            "priority": 110,
            "direction": "Outbound"
          }
        },
        {
          "name": "bastion-azure-out-allow",
          "properties": {
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "sourceAddressPrefix": "*",
            "destinationPortRange": "443",
            "destinationAddressPrefix": "AzureCloud",
            "access": "Allow",
            "priority": 120,
            "direction": "Outbound"
          }
        }
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "name": "[variables('servernsgname')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "name": "[variables('bastionnsgname')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[variables('bastionnsgrules').securityRules]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "name": "[parameters('vnetname')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressprefix')]"
          ]
        },
        "subnets": [
          {
            "name": "snet-servers",
            "properties": {
              "addressPrefix": "[parameters('serversubnetprefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('servernsgname'))]"
              }
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "[parameters('bastionsubnetprefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionnsgname'))]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[parameters('gatewaysubnetprefix')]"
            }
          },
          {
            "name": "AzureFirewallSubnet",
            "properties": {
              "addressPrefix": "[parameters('firewallsubnetprefix')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionnsgname'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('servernsgname'))]"
      ]
    }
  ],
  "outputs": {
    "id": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
    },
    "subnets": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))).subnets]"
    },
    "vnetaddress": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))).addressSpace.addressPrefixes]"
    }
  }
}