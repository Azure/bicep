{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "publisherEmail": {
      "type": "string"
    },
    "publisherName": {
      "type": "string"
    },
    "sku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Developer",
        "Standard",
        "Premium"
      ]
    },
    "skuCount": {
      "type": "int",
      "defaultValue": 1
    },
    "mutualAuthenticationCertificate": {
      "type": "secureString"
    },
    "certificatePassword": {
      "type": "string"
    },
    "eventHubNamespaceConnectionString": {
      "type": "string"
    },
    "googleClientSecret": {
      "type": "secureString"
    },
    "openIdConnectClientSecret": {
      "type": "secureString"
    },
    "tenantPolicy": {
      "type": "string"
    },
    "apiPolicy": {
      "type": "string"
    },
    "operationPolicy": {
      "type": "string"
    },
    "productPolicy": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "functions": [],
  "variables": {
    "apiManagementServiceName": "[format('apiservice{0}', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2020-06-01-preview",
      "name": "[variables('apiManagementServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherName": "[parameters('publisherName')]",
        "publisherEmail": "[parameters('publisherEmail')]"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/policies",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/policy', variables('apiManagementServiceName'))]",
      "properties": {
        "value": "[parameters('tenantPolicy')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/PetStoreSwaggerImportExample', variables('apiManagementServiceName'))]",
      "properties": {
        "format": "swagger-link-json",
        "value": "http://petstore.swagger.io/v2/swagger.json",
        "path": "examplepetstore"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleApi', variables('apiManagementServiceName'))]",
      "properties": {
        "displayName": "Example API Name",
        "description": "Description for example API",
        "serviceUrl": "https://example.net",
        "path": "exampleapipath",
        "protocols": [
          "https"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleOperationsDELETE', format('{0}/exampleApi', variables('apiManagementServiceName')))]",
      "properties": {
        "displayName": "DELETE resource",
        "method": "DELETE",
        "urlTemplate": "/resource",
        "description": "A demonstration of a DELETE call"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', split(format('{0}/exampleApi', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleApi', variables('apiManagementServiceName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleOperationsGET', format('{0}/exampleApi', variables('apiManagementServiceName')))]",
      "properties": {
        "displayName": "GET resource",
        "method": "GET",
        "urlTemplate": "/resource",
        "description": "A demonstration of a GET call"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', split(format('{0}/exampleApi', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleApi', variables('apiManagementServiceName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/policy', format('{0}/exampleOperationsGET', format('{0}/exampleApi', variables('apiManagementServiceName'))))]",
      "properties": {
        "value": "[parameters('operationPolicy')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', split(format('{0}/exampleOperationsGET', format('{0}/exampleApi', variables('apiManagementServiceName'))), '/')[0], split(format('{0}/exampleOperationsGET', format('{0}/exampleApi', variables('apiManagementServiceName'))), '/')[1], split(format('{0}/exampleOperationsGET', format('{0}/exampleApi', variables('apiManagementServiceName'))), '/')[2])]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleApiWithPolicy', variables('apiManagementServiceName'))]",
      "properties": {
        "displayName": "Example API Name with policy",
        "description": "Description for example API with policy",
        "serviceUrl": "https://examplewithpolicy.net",
        "path": "exampleapipolicypath",
        "protocols": [
          "https"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/policy', format('{0}/exampleApiWithPolicy', variables('apiManagementServiceName')))]",
      "properties": {
        "value": "[parameters('apiPolicy')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', split(format('{0}/exampleApiWithPolicy', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleApiWithPolicy', variables('apiManagementServiceName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/products",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleProduct', variables('apiManagementServiceName'))]",
      "properties": {
        "displayName": "Example Product name",
        "description": "Description for example product",
        "terms": "Terms for example product",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "subscriptionsLimit": 1,
        "state": "published"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleApi', format('{0}/exampleProduct', variables('apiManagementServiceName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products', split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/products/policies",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/policy', format('{0}/exampleProduct', variables('apiManagementServiceName')))]",
      "properties": {
        "value": "[parameters('productPolicy')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products', split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/users",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleUser1', variables('apiManagementServiceName'))]",
      "properties": {
        "firstName": "ExampleFirstName1",
        "lastName": "ExampleLastName1",
        "email": "examplefirst1@example.com",
        "state": "active",
        "note": "note for example user 1"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/users",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleUser2', variables('apiManagementServiceName'))]",
      "properties": {
        "firstName": "ExampleFirstName2",
        "lastName": "ExampleLastName2",
        "email": "examplefirst2@example.com",
        "state": "active",
        "note": "note for example user 2"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/users",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleUser1', variables('apiManagementServiceName'))]",
      "properties": {
        "firstName": "ExampleFirstName3",
        "lastName": "ExampleLastName3",
        "email": "examplefirst3@example.com",
        "state": "active",
        "note": "note for example user 3"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/properties",
      "apiVersion": "2019-01-01",
      "name": "[format('{0}/exampleproperties', variables('apiManagementServiceName'))]",
      "properties": {
        "displayName": "propertyExampleName",
        "value": "propertyExampleValue",
        "tags": [
          "exampleTag"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/subscriptions",
      "apiVersion": "2017-03-01",
      "name": "[format('{0}/examplesubscription1', variables('apiManagementServiceName'))]",
      "properties": {
        "displayName": "examplesubscription1",
        "productId": "[resourceId('Microsoft.ApiManagement/service/products', split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[1])]",
        "userId": "[resourceId('Microsoft.ApiManagement/service/users', split(format('{0}/exampleUser1', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleUser1', variables('apiManagementServiceName')), '/')[1])]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/products', split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[1])]",
        "[resourceId('Microsoft.ApiManagement/service/users', split(format('{0}/exampleUser1', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleUser1', variables('apiManagementServiceName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/subscriptions",
      "apiVersion": "2017-03-01",
      "name": "[format('{0}/examplesubscription2', variables('apiManagementServiceName'))]",
      "properties": {
        "displayName": "examplesubscription2",
        "productId": "[resourceId('Microsoft.ApiManagement/service/products', split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[1])]",
        "userId": "[resourceId('Microsoft.ApiManagement/service/users', split(format('{0}/exampleUser1', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleUser1', variables('apiManagementServiceName')), '/')[1])]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/products', split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleProduct', variables('apiManagementServiceName')), '/')[1])]",
        "[resourceId('Microsoft.ApiManagement/service/users', split(format('{0}/exampleUser1', variables('apiManagementServiceName')), '/')[0], split(format('{0}/exampleUser1', variables('apiManagementServiceName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/certificates",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleCertificate', variables('apiManagementServiceName'))]",
      "properties": {
        "data": "[parameters('mutualAuthenticationCertificate')]",
        "password": "[parameters('certificatePassword')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/groups",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleGroup', variables('apiManagementServiceName'))]",
      "properties": {
        "displayName": "Example Group Name",
        "description": "Example group description"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/openidConnectProviders",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleOpenIdConnectProvider', variables('apiManagementServiceName'))]",
      "properties": {
        "displayName": "exampleOpenIdConnectProviderName",
        "description": "Description for example OpenId Connect provider",
        "metadataEndpoint": "https://example-openIdConnect-url.net",
        "clientId": "exampleClientId",
        "clientSecret": "[parameters('openIdConnectClientSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/loggers",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/exampleLogger', variables('apiManagementServiceName'))]",
      "properties": {
        "loggerType": "azureEventHub",
        "description": "Description for example logger",
        "credentials": {
          "name": "exampleEventHubName",
          "eventHubNamespaceConnectionString": "[parameters('eventHubNamespaceConnectionString')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/identityProviders",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/google', variables('apiManagementServiceName'))]",
      "properties": {
        "clientId": "googleClientId",
        "clientSecret": "[parameters('googleClientSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    }
  ]
}