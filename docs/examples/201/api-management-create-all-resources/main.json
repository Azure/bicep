{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "dev",
      "templateHash": "1512294916618585536"
    }
  },
  "parameters": {
    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Developer",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "mutualAuthenticationCertificate": {
      "type": "secureString",
      "metadata": {
        "description": "Base-64 encoded Mutual authentication PFX certificate."
      }
    },
    "certificatePassword": {
      "type": "secureString",
      "metadata": {
        "description": "Mutual authentication certificate password."
      }
    },
    "eventHubNamespaceConnectionString": {
      "type": "secureString",
      "metadata": {
        "description": "EventHub connection string for logger."
      }
    },
    "googleClientSecret": {
      "type": "secureString",
      "metadata": {
        "description": "Google client secret to configure google identity."
      }
    },
    "openIdConnectClientSecret": {
      "type": "secureString",
      "metadata": {
        "description": "OpenId connect client secret."
      }
    },
    "tenantPolicy": {
      "type": "string",
      "metadata": {
        "description": "Tenant policy XML."
      }
    },
    "apiPolicy": {
      "type": "string",
      "metadata": {
        "description": "API policy XML."
      }
    },
    "operationPolicy": {
      "type": "string",
      "metadata": {
        "description": "Operation policy XML."
      }
    },
    "productPolicy": {
      "type": "string",
      "metadata": {
        "description": "Product policy XML."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "functions": [],
  "variables": {
    "apiManagementServiceName": "[format('apiservice{0}', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2020-12-01",
      "name": "[variables('apiManagementServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherName": "[parameters('publisherName')]",
        "publisherEmail": "[parameters('publisherEmail')]"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/policies",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'policy')]",
      "properties": {
        "value": "[parameters('tenantPolicy')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'PetStoreSwaggerImportExample')]",
      "properties": {
        "format": "swagger-link-json",
        "value": "http://petstore.swagger.io/v2/swagger.json",
        "path": "examplepetstore"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleApi')]",
      "properties": {
        "displayName": "Example API Name",
        "description": "Description for example API",
        "serviceUrl": "https://example.net",
        "path": "exampleapipath",
        "protocols": [
          "https"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}/{2}', variables('apiManagementServiceName'), 'exampleApi', 'exampleOperationsDELETE')]",
      "properties": {
        "displayName": "DELETE resource",
        "method": "DELETE",
        "urlTemplate": "/resource",
        "description": "A demonstration of a DELETE call"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementServiceName'), 'exampleApi')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}/{2}', variables('apiManagementServiceName'), 'exampleApi', 'exampleOperationsGET')]",
      "properties": {
        "displayName": "GET resource",
        "method": "GET",
        "urlTemplate": "/resource",
        "description": "A demonstration of a GET call"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementServiceName'), 'exampleApi')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}/{2}/{3}', variables('apiManagementServiceName'), 'exampleApi', 'exampleOperationsGET', 'policy')]",
      "properties": {
        "value": "[parameters('operationPolicy')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementServiceName'), 'exampleApi')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apiManagementServiceName'), 'exampleApi', 'exampleOperationsGET')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleApiWithPolicy')]",
      "properties": {
        "displayName": "Example API Name with policy",
        "description": "Description for example API with policy",
        "serviceUrl": "https://examplewithpolicy.net",
        "path": "exampleapipolicypath",
        "protocols": [
          "https"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}/{2}', variables('apiManagementServiceName'), 'exampleApiWithPolicy', 'policy')]",
      "properties": {
        "value": "[parameters('apiPolicy')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementServiceName'), 'exampleApiWithPolicy')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/products",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleProduct')]",
      "properties": {
        "displayName": "Example Product Name",
        "description": "Description for example product",
        "terms": "Terms for example product",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "subscriptionsLimit": 1,
        "state": "published"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}/{2}', variables('apiManagementServiceName'), 'exampleProduct', 'exampleApi')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/products', variables('apiManagementServiceName'), 'exampleProduct')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/products/policies",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}/{2}', variables('apiManagementServiceName'), 'exampleProduct', 'policy')]",
      "properties": {
        "value": "[parameters('productPolicy')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/products', variables('apiManagementServiceName'), 'exampleProduct')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/users",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleUser1')]",
      "properties": {
        "firstName": "ExampleFirstName1",
        "lastName": "ExampleLastName1",
        "email": "examplefirst1@example.com",
        "state": "active",
        "note": "note for example user 1"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/users",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleUser2')]",
      "properties": {
        "firstName": "ExampleFirstName2",
        "lastName": "ExampleLastName2",
        "email": "examplefirst2@example.com",
        "state": "active",
        "note": "note for example user 2"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/users",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleUser3')]",
      "properties": {
        "firstName": "ExampleFirstName3",
        "lastName": "ExampleLastName3",
        "email": "examplefirst3@example.com",
        "state": "active",
        "note": "note for example user 3"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/properties",
      "apiVersion": "2019-01-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleproperties')]",
      "properties": {
        "displayName": "propertyExampleName",
        "value": "propertyExampleValue",
        "tags": [
          "exampleTag"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/subscriptions",
      "apiVersion": "2018-01-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'examplesubscription1')]",
      "properties": {
        "displayName": "examplesubscription1",
        "productId": "[resourceId('Microsoft.ApiManagement/service/products', variables('apiManagementServiceName'), 'exampleProduct')]",
        "userId": "[resourceId('Microsoft.ApiManagement/service/users', variables('apiManagementServiceName'), 'exampleUser1')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/products', variables('apiManagementServiceName'), 'exampleProduct')]",
        "[resourceId('Microsoft.ApiManagement/service/users', variables('apiManagementServiceName'), 'exampleUser1')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/subscriptions",
      "apiVersion": "2018-01-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'examplesubscription2')]",
      "properties": {
        "displayName": "examplesubscription2",
        "productId": "[resourceId('Microsoft.ApiManagement/service/products', variables('apiManagementServiceName'), 'exampleProduct')]",
        "userId": "[resourceId('Microsoft.ApiManagement/service/users', variables('apiManagementServiceName'), 'exampleUser3')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/products', variables('apiManagementServiceName'), 'exampleProduct')]",
        "[resourceId('Microsoft.ApiManagement/service/users', variables('apiManagementServiceName'), 'exampleUser3')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/certificates",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleCertificate')]",
      "properties": {
        "data": "[parameters('mutualAuthenticationCertificate')]",
        "password": "[parameters('certificatePassword')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/groups",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleGroup')]",
      "properties": {
        "displayName": "Example Group Name",
        "description": "Example group description"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/openidConnectProviders",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleOpenIdConnectProvider')]",
      "properties": {
        "displayName": "exampleOpenIdConnectProviderName",
        "description": "Description for example OpenId Connect provider",
        "metadataEndpoint": "https://example-openIdConnect-url.net",
        "clientId": "exampleClientId",
        "clientSecret": "[parameters('openIdConnectClientSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/loggers",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'exampleLogger')]",
      "properties": {
        "loggerType": "azureEventHub",
        "description": "Description for example logger",
        "credentials": {
          "name": "exampleEventHubName",
          "eventHubNamespaceConnectionString": "[parameters('eventHubNamespaceConnectionString')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/identityProviders",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), 'google')]",
      "properties": {
        "clientId": "googleClientId",
        "clientSecret": "[parameters('googleClientSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
      ]
    }
  ]
}