parameters:
  - name: rid
    type: string

steps:
- task: UseDotNet@2
  displayName: Setup .NET Core
  continueOnError: true
  inputs:
    packageType: 'sdk'
    useGlobalJson: true
    performMultiLevelLookup: true

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: $(BuildSolution)
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: $(BuildSolution)
    arguments: '--configuration $(BuildConfiguration) --logger trx --blame --collect:"XPlat Code Coverage" --settings ./.github/workflows/codecov.runsettings --results-directory $(Build.SourcesDirectory)/TestResults/'
    publishTestResults: false

- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: '$(Build.SourcesDirectory)/TestResults/**/*.trx'
    failTaskOnFailedTests: true

- ${{ if eq(parameters.rid, 'win-x64') }}:
  - task: DotNetCoreCLI@2
    displayName: Publish Language Server
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: ./src/Bicep.LangServer/Bicep.LangServer.csproj
      arguments: '--configuration $(BuildConfiguration)'
      zipAfterPublish: false

  - task: onebranch.pipeline.signing@1
    displayName: Sign Language Server
    inputs:
      command: 'sign'
      signing_profile: 'external_distribution'
      files_to_sign: '**/*.exe;**/*.dll;**/*.ps1'
      search_root: '$(Build.SourcesDirectory)/src/Bicep.LangServer/bin/$(BuildConfiguration)/$(TargetFramework)/publish/'

  - task: CopyFiles@2
    displayName: Copy language server to output
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/src/Bicep.LangServer/bin/$(BuildConfiguration)/$(TargetFramework)/publish/'
      contents: '**'
      targetFolder: '$(Build.SourcesDirectory)/out/bicep.LangServer/'

- task: DotNetCoreCLI@2
  displayName: Publish Bicep
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: ./src/Bicep.Cli/Bicep.Cli.csproj
    arguments: '--configuration $(BuildConfiguration) --self-contained true -p:PublishTrimmed=true -p:PublishSingleFile=true -r ${{ parameters.rid }}'
    zipAfterPublish: false

- ${{ if eq(parameters.rid, 'win-x64') }}:
  - task: onebranch.pipeline.signing@1
    displayName: Sign Bicep
    inputs:
      command: 'sign'
      signing_profile: 'external_distribution'
      files_to_sign: '**/*.exe;**/*.dll;**/*.ps1'
      search_root: '$(Build.SourcesDirectory)/src/Bicep.Cli/bin/$(BuildConfiguration)/$(TargetFramework)/${{ parameters.rid }}/publish/'

- task: CopyFiles@2
  displayName: Copy bicep to output
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)/src/Bicep.Cli/bin/$(BuildConfiguration)/$(TargetFramework)/${{ parameters.rid }}/publish/'
    contents: '**'
    targetFolder: '$(Build.SourcesDirectory)/out/bicep-$(BuildConfiguration)-${{ parameters.rid }}/'

- ${{ if eq(parameters.rid, 'win-x64') }}:
  - task: CopyFiles@2
    displayName: Copy bicep to setup project
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/src/Bicep.Cli/bin/$(BuildConfiguration)/$(TargetFramework)/${{ parameters.rid }}/publish/'
      contents: '**'
      targetFolder: $(Build.SourcesDirectory)/src/installer-win/bicep

  - task: onebranch.pipeline.signing@1
    displayName: Sign Path Script
    inputs:
      command: 'sign'
      signing_profile: 'external_distribution'
      files_to_sign: '*.ps1'
      search_root: '$(Build.SourcesDirectory)/src/installer-win/'

  - task: DotNetCoreCLI@2
    displayName: Build Windows Setup
    inputs:
      command: build
      projects: ./src/installer-win/installer.proj
      arguments: '--configuration $(BuildConfiguration)'

  - task: onebranch.pipeline.signing@1
    displayName: Sign Windows Setup
    inputs:
      command: 'sign'
      signing_profile: 'external_distribution'
      files_to_sign: '**/*.exe'
      search_root: '$(Build.SourcesDirectory)/src/installer-win/bin/release/net46/'

  - task: CopyFiles@2
    displayName: Copy Windows Setup to output
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/src/installer-win/bin/release/net46/'
      contents: '**'
      targetFolder: '$(Build.SourcesDirectory)/out/bicep-setup-${{ parameters.rid }}/'